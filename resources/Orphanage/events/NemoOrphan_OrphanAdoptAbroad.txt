# This text file is a mod script file which uses by the Crusader Kings 2
# Namespace              : OPG
# Reserved Event ID      : 3000~3999
# Suitable CK2 Version   : 2.5.x
# Recently Modified Date : 2016-04-22

namespace = OPG

#==============================================================================#
# 고아 해외입양 이벤트                                                         #
# 고아를 영지 외의 다른 군주에게 보내는 이벤트들은 모두 여기에서 처리된다.     #
# (봉신에게 맡기는 부분은 여기에서 처리하지 않는다. 오직 영향권 밖으로!)       #
#==============================================================================#

#------------------------------------------------------------------------------#
# 고아 입양 해금 : 발단 (3001~3006)                                            #
#------------------------------------------------------------------------------#
# * 발단: 외교 자문관으로부터 고아 입양에 대한 보고를 받음...                  #
#   발생조건 :                                                                 #
#   - 기본 발생조건은 동일(플레이어가 종군중이 아닐 것, 투옥되지 않을 것)      #
#   - 고아원 레벨 3 혹은 그 이상이 지어져야 함                                 #
#   - 외교 자문관이 수도가 아닌 다른 프로빈스에서 외교관계 향상 일을 하고 있음 #
#   - 고아원 보모가 종군 이벤트를 겪은 후 그 쿨타임(5년) 내에 있어야 함        #
#   - 고아가 단 1명이라도 고아원에 있어야 함.                                  #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3001
	hide_window = yes

	ai = no

	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 일반 상태의 플레이어 확인                                            #
		#----------------------------------------------------------------------#

		is_common_player_trigger = yes

		#----------------------------------------------------------------------#
		# 건물 : 최소한 고아원 레벨 3 이상의 고아원 건물이 필요                #
		#----------------------------------------------------------------------#

		OR = {
			has_orphanage_level_3_trigger = yes
			has_orphanage_level_4_trigger = yes
		}

		#----------------------------------------------------------------------#
		# 재상이 수도 밖에서 관계 향상 임무 수행중일 것                        #
		#----------------------------------------------------------------------#

		job_chancellor = {
			in_command = no
			has_job_action = action_improve_relations
			NOT = { at_location = ROOT }
		}

		#----------------------------------------------------------------------#
		# 고아원 보모가 현재 수도에 있으며, 종군 쿨타임 중에 있을 것           #
		#----------------------------------------------------------------------#

		any_courtier = {
			is_orphanage_nurse_trigger = yes
			has_character_modifier = mod_event_interval_notification_flag_modifier_mission_to_battlefield
			at_location = ROOT
		}

		#----------------------------------------------------------------------#
		# 현재 고아원에 고아가 한 명이라도 존재할 것                           #
		#----------------------------------------------------------------------#

		any_courtier = {
			OR = {
				trait = rescued_orphan_by_ai
				trait = rescued_orphan_by_player
			}
			is_adult = no
		}

		#----------------------------------------------------------------------#
		# 진행을 위한 임시 플래그들. 이벤트가 이미 진행중이 아닐 것            #
		#----------------------------------------------------------------------#

		NOT = { has_character_flag = mod_event_temporary_flag_letter_from_chancellor }
		NOT = { has_character_flag = mod_event_temporary_flag_talk_to_nurse_about_letter }
		NOT = { has_character_flag = mod_event_temporary_flag_2nd_letter_from_chancellor }
		NOT = { has_character_flag = mod_event_temporary_flag_agree_to_adopt_orphan_abroad }
		NOT = { has_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_ACTIVATED }
	}

	mean_time_to_happen = {
		days = 14
	}

	immediate = {
		job_chancellor = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3002
				}
			}			
		}
	}
}

character_event = {
	id = OPG.3002
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3003
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3003
	desc = EVTDESC_OPG_3003
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3003
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3004
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3004
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				letter_event = {
					id = OPG.3005
				}
			}	
		}
	}
}

letter_event = {
	id = OPG.3005
	desc = EVTDESC_OPG_3005

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3005
		hidden_tooltip = {
			letter_event = {
				id = OPG.3006
			}
		}	
	}
}

letter_event = {
	id = OPG.3006
	desc = EVTDESC_OPG_3006
	show_from_from = yes

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3006
		ROOT = {
			hidden_tooltip = {
				set_character_flag = mod_event_temporary_flag_letter_from_chancellor			
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 고아 입양 해금 : 진행1 (3011~3016)                                           #
#------------------------------------------------------------------------------#
# * 고아원 보모와 외교 자문관의 편지에 대해 대화                               #
# * 고아원 보모를 찾아가서 실제 이벤트 대화를 선택해야 진행됨                  #
#------------------------------------------------------------------------------#

character_event = {
	id = OPG.3011
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3012
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3012
	desc = EVTDESC_OPG_3012
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3012
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3013
				}
			}	
		}
	}
	option = {
		name = EVTOPTB_OPG_3012
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3013
				}
			}	
		}
	}
	option = {
		name = EVTOPTC_OPG_3012
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3013
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3013
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3014
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3014
	desc = EVTDESC_OPG_3014
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3014
		hidden_tooltip = {
			character_event = {
				id = OPG.3015
			}
		}	
	}
}

character_event = {
	id = OPG.3015
	desc = EVTDESC_OPG_3015
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3015
		ROOT = {
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 대화 완료. 다음 단계 이벤트가 일어날 수 있도록 플래그를 준다 #
				#--------------------------------------------------------------#

				clr_character_flag = mod_event_temporary_flag_letter_from_chancellor
				set_character_flag = mod_event_temporary_flag_talk_to_nurse_about_letter

				#--------------------------------------------------------------#
				# 보모를 만나서 이벤트 대화 중이므로 다시 거기로 돌아가야 한다 #
				#--------------------------------------------------------------#

				character_event = {
					id = OPG.2105
				}
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 고아 입양 해금 : 진행2 (3021~3025)                                           #
#------------------------------------------------------------------------------#
# * 추가적인 보고                                                              #
#   발생조건 :                                                                 #
#   - 고아원 보모와 대화 완료.                                                 #
#   - 자문관이 계속 외교관계 향상 일을 하고 있을 것.                           #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3021
	hide_window = yes

	# ROOT : Player

	ai = no

	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 일반 상태의 플레이어 확인                                            #
		#----------------------------------------------------------------------#

		is_common_player_trigger = yes

		#----------------------------------------------------------------------#
		# 건물 : 최소한 고아원 레벨 3 이상의 고아원 건물이 필요                #
		#----------------------------------------------------------------------#

		OR = {
			has_orphanage_level_3_trigger = yes
			has_orphanage_level_4_trigger = yes
		}

		#----------------------------------------------------------------------#
		# 재상이 수도 밖에서 관계 향상 임무 수행중일 것                        #
		#----------------------------------------------------------------------#

		job_chancellor = {
			in_command = no
			has_job_action = action_improve_relations
			NOT = { at_location = ROOT }
		}

		#----------------------------------------------------------------------#
		# 현재 고아원에 고아가 한 명이라도 존재할 것                           #
		#----------------------------------------------------------------------#

		any_courtier = {
			OR = {
				trait = rescued_orphan_by_ai
				trait = rescued_orphan_by_player
			}
			is_adult = no
		}

		#----------------------------------------------------------------------#
		# 진행을 위한 임시 플래그들. 이벤트가 이미 진행중이 아닐 것            #
		#----------------------------------------------------------------------#

		has_character_flag = mod_event_temporary_flag_talk_to_nurse_about_letter

		NOT = { has_character_flag = mod_event_temporary_flag_2nd_letter_from_chancellor }
		NOT = { has_character_flag = mod_event_temporary_flag_agree_to_adopt_orphan_abroad }
		NOT = { has_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_ACTIVATED }
	}

	mean_time_to_happen = {
		days = 14
	}

	immediate = {
		job_chancellor = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3022
				}
			}			
		}
	}
}

character_event = {
	id = OPG.3022
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3023
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3023
	desc = EVTDESC_OPG_3023
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3023
		hidden_tooltip = {
			letter_event = {
				id = OPG.3024
			}
		}	
	}
}

letter_event = {
	id = OPG.3024
	desc = EVTDESC_OPG_3024

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3024
		ROOT = {
			hidden_tooltip = {
				clr_character_flag = mod_event_temporary_flag_talk_to_nurse_about_letter
				set_character_flag = mod_event_temporary_flag_2nd_letter_from_chancellor
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 고아 입양 해금 : 진행3 (3031~3036)                                           #
#------------------------------------------------------------------------------#
# * 고아원 보모와 외교 자문관의 편지에 대해 대화 - 2                           #
# * 고아원 보모를 찾아가서 실제 이벤트 대화를 선택해야 진행됨                  #
#------------------------------------------------------------------------------#

character_event = {
	id = OPG.3031
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3032
				}
			}	
		}
	}
}

character_event = {
	id = OPG.3032
	desc = EVTDESC_OPG_3032
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3032
		hidden_tooltip = {
			character_event = {
				id = OPG.3033
			}
		}	
	}
}

character_event = {
	id = OPG.3033
	desc = EVTDESC_OPG_3033
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3033
		hidden_tooltip = {
			character_event = {
				id = OPG.3034
			}
		}	
	}
}

character_event = {
	id = OPG.3034
	desc = EVTDESC_OPG_3034
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3034
		ROOT = {
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 다음 이벤트가 진행될 수 있도록 플래그 세팅                   #
				#--------------------------------------------------------------#

				clr_character_flag = mod_event_temporary_flag_2nd_letter_from_chancellor
				set_character_flag = mod_event_temporary_flag_agree_to_adopt_orphan_abroad

				#--------------------------------------------------------------#
				# 보모를 만나서 이벤트 대화 중이므로 다시 거기로 돌아가야 한다 #
				#--------------------------------------------------------------#

				character_event = {
					id = OPG.2105
				}
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 고아 입양 해금 : 완료 (3037~3039)                                            #
#------------------------------------------------------------------------------#
# * 추가적인 보고...                                                           #
#   발생조건 :                                                                 #
#   - 고아원 보모와 대화 완료 후 일정 시간 경과                                #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3037
	hide_window = yes

	ai = no

	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 일반 상태의 플레이어 확인                                            #
		#----------------------------------------------------------------------#

		is_common_player_trigger = yes

		#----------------------------------------------------------------------#
		# 건물 : 최소한 고아원 레벨 3 이상의 고아원 건물이 필요                #
		#----------------------------------------------------------------------#

		OR = {
			has_orphanage_level_3_trigger = yes
			has_orphanage_level_4_trigger = yes
		}

		#----------------------------------------------------------------------#
		# 고아원 보모가 현재 수도에 있을 것                                    #
		#----------------------------------------------------------------------#

		any_courtier = {
			is_orphanage_nurse_trigger = yes
			at_location = ROOT
		}

		#----------------------------------------------------------------------#
		# 진행을 위한 임시 플래그들. 이벤트가 이미 진행중이 아닐 것            #
		#----------------------------------------------------------------------#

		has_character_flag = mod_event_temporary_flag_agree_to_adopt_orphan_abroad
		NOT = { has_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_ACTIVATED }
	}

	mean_time_to_happen = {
		days = 14
	}

	immediate = {
		random_courtier = {
			limit = {
				is_orphanage_nurse_trigger = yes
			}
			hidden_tooltip = {
				character_event = {
					id = OPG.3038
				}
			}			
		}
	}
}

character_event = {
	id = OPG.3038
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			hidden_tooltip = {
				letter_event = {
					id = OPG.3039
				}
			}	
		}
	}
}

letter_event = {
	id = OPG.3039
	desc = EVTDESC_OPG_3039

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3039
		ROOT = {
			custom_tooltip = {

				#--------------------------------------------------------------#
				# 컨텐츠 활성화                                                #
				#--------------------------------------------------------------#

				text = CUSTOM_TOOLTIP_ADOPT_ORPHAN_ABROAD_IS_ACTIVATED
				hidden_tooltip = {
					clr_character_flag = mod_event_temporary_flag_agree_to_adopt_orphan_abroad
					set_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_ACTIVATED
				}
			}
		}
	}
}



#------------------------------------------------------------------------------#
# * 다른 군주에게 보낼 고아 선택 : 디시전 활성화 (3051)                        #
#   - 돌려보낼때는 항상 OPG.2105 (플레이어 스코프로 보낸다)                    #
#   - 상대 군주가 없다면 선택을 할 수가 없으며, 다른 메시지가 나온다.          #
#------------------------------------------------------------------------------#

character_event = {
	id = OPG.3051
	desc = {
		text = EVTDESC_OPG_3051_OK
		trigger = {
			has_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad
		}
	}
	desc = {
		text = EVTDESC_OPG_3051_NO
		trigger = {
			NOT = { has_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad }
		}
	}
	picture = GFX_evt_nemo_common_discuss

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = {
			text = EVTOPTD_OPG_3051_OK
			trigger = {
				has_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad
			}	
		}
		name = {
			text = EVTOPTD_OPG_3051_NO
			trigger = {
				NOT = { has_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad }
			}	
		}
		ROOT = {
			hidden_tooltip = {
				clr_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad

				character_event = {
					id = OPG.2105
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# * 다른 군주에게 보낼 수 있는 고아인지 확인 (decision -> 3052)                #
#   디시전 목록에서 고아를 선택하면 이 메뉴로 온다.                            #
#   기본적인 조건은 디시전 목록에서 걸러졌으므로 여기서는 따로 플레이어에게    #
#   알리지 않는 기타 조건들을 확인한다.                                        #
#   가능한 경우 3053->3054, 불가능한 경우 3053->3055                           #
#------------------------------------------------------------------------------#

character_event = {
	id = OPG.3052
	hide_window = yes

	is_triggered_only = yes

	## ROOT : Player, FROM : Selected Orphan

	immediate = {
		FROM = {
			character_event = {
				id = OPG.3053
			}
		}
	}
}

character_event = {

	id = OPG.3053
	hide_window = yes

	## ROOT : Selected Orphan, FROM : Player

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 거절되는 경우 : 남자 고아의 경우                                     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				is_female = no
				OR = {
					trait = incapable
					trait = maimed
					trait = eunuch
				}				
			}
			FROM = {
				hidden_tooltip = {
					character_event = {
						id = OPG.3055
					}
				}
				break = yes
			}
		}

		#----------------------------------------------------------------------#
		# 거절되는 경우 : 여자 고아의 경우                                     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				is_female = yes
				OR = {
					trait = incapable
					trait = maimed
					trait = blinded
					trait = scarred
					trait = wounded
				}			
			}
			FROM = {
				hidden_tooltip = {
					character_event = {
						id = OPG.3055
					}
				}
				break = yes
			}
		}

		#----------------------------------------------------------------------#
		# 그 외의 경우: 조건 통과                                              #
		#----------------------------------------------------------------------#

		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3054
				}
			}
		}
	}
}


#------------------------------------------------------------------------------#
# * 보낼 수 있음 : 허락 여부 최종 확인                                         #
#   가능한 고아는 이 이벤트를 통해 최종적으로 확인이 이루어진다.               #
#   이후에는 취소가 안 된다.                                                   #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3054
	desc = EVTDESC_OPG_3054
	picture = GFX_evt_nemo_common_discuss

	## ROOT : Player, FROM : Selected Orphan ##

	is_triggered_only = yes

	## 허락한 경우

	option = {
		name = EVTOPTA_OPG_3054

		## 입양보낼 가문/영주 선택 ##

		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3056
				}
			}
		}
	}

	## 허락하지 않은 경우 : 선택을 다시 할 수 있다.

	option = {
		name = EVTOPTB_OPG_3054
		ROOT = {
			hidden_tooltip = {
				clr_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad_selected
			}
		}
	}
}


#------------------------------------------------------------------------------#
# * 보낼 수 없음 : 표면적인 메시지는 이 고아를 바라는 군주가 없음              #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3055
	desc = EVTDESC_OPG_3055
	picture = GFX_evt_nemo_common_discuss

	## ROOT : Player, FROM : Selected Orphan

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3055
		ROOT = {
			hidden_tooltip = {
				clr_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad_selected
			}
		}
	}
}


#------------------------------------------------------------------------------#
# * 고아를 인수받을 군주 예비목록을 작성 및 보낼 군주 선택 (3054 -> 3056~3057) #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3056
	hide_window = yes

	is_triggered_only = yes

	## ROOT : Selected Orphan, FROM : Player ##

	immediate = {

		#----------------------------------------------------------------------#
		# 이제 더 이상 취소할 수 없으므로, 플레이어의 이벤트 타겟과 고아의 이  #
		# 벤트 타겟을 각각 설정해 둔다.                                        #
		# (is_suitable_ruler_to_adopt_orphan_trigger 조건에 필요하다.)         #
		#----------------------------------------------------------------------#

		FROM = {
			save_event_target_as = mod_event_target_player
		}
		ROOT = {
			save_event_target_as = mod_event_target_orphan
		}

		#----------------------------------------------------------------------#
		# 고아를 인수받을 4명의 후보를 여기서 뽑아낸다.                        #
		#----------------------------------------------------------------------#

		## 후보 1번 : 여기에 왔다면 조건이 맞는 후보가 1명은 있는 것. ##

		random_playable_ruler = {
			limit = {
				is_suitable_ruler_to_adopt_orphan_trigger = yes
			}
			save_event_target_as = mod_target_candidate_ruler_1
		}

		## 후보 2번 : 없을 수 있다는 가정을 하라. ##

		if = {
			limit = {
				any_playable_ruler = {
					is_suitable_ruler_to_adopt_orphan_trigger = yes
					NOT = { character = event_target:mod_target_candidate_ruler_1 }
				}
			}
			random_playable_ruler = {
				limit = {
					is_suitable_ruler_to_adopt_orphan_trigger = yes
					NOT = { character = event_target:mod_target_candidate_ruler_1 }
				}
				save_event_target_as = mod_target_candidate_ruler_2
				set_global_flag = mod_event_temporary_flag_suitable_ruler_no_2_exist
			}
		}

		## 후보 3번 : 마찬가지로 없을 수 있다는 가정을 하라. ##

		if = {
			limit = {
				has_global_flag = mod_event_temporary_flag_suitable_ruler_no_2_exist
				any_playable_ruler = {
					is_suitable_ruler_to_adopt_orphan_trigger = yes
					NOT = { character = event_target:mod_target_candidate_ruler_1 }
					NOT = { character = event_target:mod_target_candidate_ruler_2 }
				}
			}
			random_playable_ruler = {
				limit = {
					is_suitable_ruler_to_adopt_orphan_trigger = yes
					NOT = { character = event_target:mod_target_candidate_ruler_1 }
					NOT = { character = event_target:mod_target_candidate_ruler_2 }
				}
				save_event_target_as = mod_target_candidate_ruler_3
				set_global_flag = mod_event_temporary_flag_suitable_ruler_no_3_exist
			}
		}

		## 4번째 후보 : 일단 2,3번째 후보가 선정되었는지를 먼저 확인한다. ##

		if = {
			limit = {
				has_global_flag = mod_event_temporary_flag_suitable_ruler_no_2_exist
				has_global_flag = mod_event_temporary_flag_suitable_ruler_no_3_exist
			}

			## 4번째 후보 1: 동일 문화의 군주가 있는 경우 ##

			if = {
				limit = {
					any_playable_ruler = {
						is_suitable_ruler_to_adopt_orphan_trigger = yes
						culture = ROOT
						NOT = { character = event_target:mod_target_candidate_ruler_1 }
						NOT = { character = event_target:mod_target_candidate_ruler_2 }
						NOT = { character = event_target:mod_target_candidate_ruler_3 }
					}
				}

				random_playable_ruler = {
					limit = {
						is_suitable_ruler_to_adopt_orphan_trigger = yes
						culture = ROOT
						NOT = { character = event_target:mod_target_candidate_ruler_1 }
						NOT = { character = event_target:mod_target_candidate_ruler_2 }
						NOT = { character = event_target:mod_target_candidate_ruler_3 }
					}
					save_event_target_as = mod_target_candidate_ruler_4
					set_global_flag = mod_event_temporary_flag_same_culture_ruler_exist
				}
			}

			## 4번째 후보 2: 동일 문화의 군주가 없지만 동일 문화 그룹의 군주가 있는 경우 ##

			if = {
				limit = {
					any_playable_ruler = {
						is_suitable_ruler_to_adopt_orphan_trigger = yes
						culture_group = ROOT
						NOT = { character = event_target:mod_target_candidate_ruler_1 }
						NOT = { character = event_target:mod_target_candidate_ruler_2 }
						NOT = { character = event_target:mod_target_candidate_ruler_3 }
					}
					NOT = { has_global_flag = mod_event_temporary_flag_same_culture_ruler_exist }
				}

				random_playable_ruler = {
					limit = {
						is_suitable_ruler_to_adopt_orphan_trigger = yes
						culture_group = ROOT
						NOT = { character = event_target:mod_target_candidate_ruler_1 }
						NOT = { character = event_target:mod_target_candidate_ruler_2 }
						NOT = { character = event_target:mod_target_candidate_ruler_3 }
					}
					save_event_target_as = mod_target_candidate_ruler_4
					set_global_flag = mod_event_temporary_flag_same_culture_ruler_exist
				}
			}
		}

		#----------------------------------------------------------------------#
		# 고아를 보낼 후보가 정해졌으므로 선택 이벤트로 이동한다.              #
		#----------------------------------------------------------------------#

		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3057
				}
			}
		}
	}
}

character_event = {

	id = OPG.3057
	desc = EVTDESC_OPG_3057
	picture = GFX_evt_nemo_common_discuss

	## ROOT : Player, FROM : Selected Orphan ##

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3057
		event_target:mod_target_candidate_ruler_1 = {
			character_event = {
				id = OPG.3058
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3057
		trigger = {
			has_global_flag = mod_event_temporary_flag_suitable_ruler_no_2_exist
		}
		event_target:mod_target_candidate_ruler_2 = {
			character_event = {
				id = OPG.3058
			}
		}
	}

	option = {
		name = EVTOPTC_OPG_3057
		trigger = {
			has_global_flag = mod_event_temporary_flag_suitable_ruler_no_3_exist
		}
		event_target:mod_target_candidate_ruler_3 = {
			character_event = {
				id = OPG.3058
			}
		}
	}

	option = {
		name = EVTOPTD_OPG_3057
		trigger = {
			has_global_flag = mod_event_temporary_flag_same_culture_ruler_exist
		}
		event_target:mod_target_candidate_ruler_4 = {
			character_event = {
				id = OPG.3058
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 모든 선택 완료 : 고아 쪽의 설정을 초기화한다.                                #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3058
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	immediate = {

		#----------------------------------------------------------------------#
		# 선택된 상대방 군주를 타겟에 집어넣는다.                              #
		#----------------------------------------------------------------------#

		ROOT = {
			save_event_target_as = mod_event_target_ruler
		}

		#----------------------------------------------------------------------#
		# 자주 쓰이게 될 - 고아원 보모를 타겟에 집어넣는다.                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			random_courtier = {
				limit = {
					is_orphanage_nurse_trigger = yes
				}
				save_event_target_as = mod_event_target_orphanage_nurse
			}
		}

		#----------------------------------------------------------------------#
		# 선택지를 위해 설정했던 타겟 설정과 임시 플래그를 삭제                #
		#----------------------------------------------------------------------#

		clear_event_target = mod_target_candidate_ruler_1
		clear_event_target = mod_target_candidate_ruler_2
		clear_event_target = mod_target_candidate_ruler_3
		clear_event_target = mod_target_candidate_ruler_4
		clr_global_flag = mod_event_temporary_flag_same_culture_ruler_exist
		clr_global_flag = mod_event_temporary_flag_suitable_ruler_no_2_exist
		clr_global_flag = mod_event_temporary_flag_suitable_ruler_no_3_exist

		event_target:mod_event_target_player = {

			#------------------------------------------------------------------#
			# 여기부터 6개월의 쿨 타임이 동작한다.                             #
			#------------------------------------------------------------------#

			add_character_modifier = {
				name = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
				duration = 183
			}

			#------------------------------------------------------------------#
			# 쿨 타임이 적용되었으므로, 더 이상 고아가 선택되었음을 나타내는   #
			# 임시 플래그는 필요가 없다. 지운다.                               #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_pending_flag_player_adopt_orphan_abroad_selected
		}

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 고아의 트레잇, 플래그, 모디파이어 등을 정리                      #
			#------------------------------------------------------------------#

			remove_orphan_character_flag_effect = yes
			remove_orphan_character_flag_reminiscence_effect = yes
			remove_orphan_character_flag_intrigue_effect = yes
			remove_orphan_character_relative_opinion_modifier_effect = yes
			remove_orphan_character_trait_effect = yes

			remove_orphan_character_relative_opinion_intrigue_modifier_effect = yes

			#------------------------------------------------------------------#
			# 플레이어에게 메시지 이벤트를 띄우기 위해 핑 이벤트를 호출한다.   #
			#------------------------------------------------------------------#

			character_event = {
				id = OPG.3059
			}
		}
	}
}

character_event = {
	id = OPG.3059
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3061
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 고아원 보모가 고아를 데려와 떠나게 된 사실을 알리다. (3061~3062)             #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3061
	desc = EVTDESC_OPG_3061
	picture = GFX_evt_nemo_adopt_orphan

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3061
		ROOT = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3062
				}			
			}
		}
	}
}

character_event = {

	id = OPG.3062
	desc = EVTDESC_OPG_3062
	picture = GFX_evt_nemo_adopt_orphan

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3062
		ROOT = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3063
					days = 1
				}			
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 고아가 새로운 주군에게 여행을 떠나다 (3063)                                  #
#------------------------------------------------------------------------------#

character_event = {
	id = OPG.3063
	desc = EVTDESC_OPG_3063
	picture = GFX_evt_nemo_event_journey_departure

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3063

		#----------------------------------------------------------------------#
		# 고아를 떠나 보내다                                                   #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			move_character = event_target:mod_event_target_ruler
		}

		#----------------------------------------------------------------------#
		# 고아의 교육자/보호자를 설정한다                                      #
		# - 만약 Conclave DLC 를 사용중이 아니라면 강제로 후견인을 설정한다.   #
		#   (6세 이상인 경우)                                                  #
		# - 만약 Conclave DLC 를 사용중이라면 그냥 냅둔다. 알아서 바뀔테니.    #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				NOT = { has_dlc = "Zeus" }
				event_target:mod_event_target_orphan = {
					age = 6
				}
			}
			event_target:mod_event_target_orphan = {
				set_guardian = event_target:mod_event_target_ruler
			}
		}
		ROOT = {
			piety = 1
			prestige = 1
		}

		#----------------------------------------------------------------------#
		# 만약 첫 해외파송이라면 플래그를 설정한다. (이걸 기점으로 발생하는 이 #
		# 벤트들이 있으니)                                                     #
		#----------------------------------------------------------------------#
		
		if = {
			limit = {
				NOT = { has_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_CONFIRMED }
			}
			set_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_CONFIRMED
		}


		#----------------------------------------------------------------------#
		# 고아가 무사히 여행을 마칠 확률 : 90%                                 #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			random_list = {
				90 = {
					#----------------------------------------------------------#
					# 여행을 무사히 마치고 목적지에 도착함 (90%)               #
					#----------------------------------------------------------#

					event_target:mod_event_target_orphan = {
						hidden_tooltip = {
							character_event = {
								id = OPG.3071
							}				
						}
					}
				}
				10 = {
					#----------------------------------------------------------#
					# 여행 도중에 사망함 (10%)                                 #
					# 요청에 의한 파송 시 사망 이벤트는 발생하지 않는다.       #
					#----------------------------------------------------------#

					modifier = {
						factor = 0
						event_target:mod_event_target_orphan = {
							OR = {
								has_character_flag = mod_event_check_flag_orphan_for_monk
								has_character_flag = mod_event_check_flag_orphan_for_companion
								has_character_flag = mod_event_check_flag_orphan_for_concubine
								has_character_flag = mod_event_check_flag_orphan_for_adopting
							}
						}
					}

					event_target:mod_event_target_orphan = {
						hidden_tooltip = {
							character_event = {
								id = OPG.3065
								days = 7
							}				
						}
					}
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 여행 도중 사고를 만나 고아가 사망하다 (3065~3068)                            #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3065
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_ruler = {
			character_event = {
				id = OPG.3066
			}
		}
	}
}

character_event = {

	id = OPG.3066
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3067
			}
		}
	}
}

character_event = {

	id = OPG.3067
	desc = EVTDESC_OPG_3067
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3067
		ROOT = {
			hidden_tooltip = {
				letter_event = {
					id = OPG.3068
				}
			}
		}
	}
}

letter_event = {

	id = OPG.3068
	desc = EVTDESC_OPG_3068
	
	show_from_from = yes
	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3068

		#----------------------------------------------------------------------#
		# 고아가 사망 (사인: 사고사)                                           #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = { death_reason = death_accident }
		}

		#----------------------------------------------------------------------#
		# 이벤트를 종료한다.                                                   #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			finish_adopting_orphan_abroad_event_effect = yes	
		}
	}
}

#------------------------------------------------------------------------------#
# 입양이 결정된 후 받을 골드를 정산 (3071~3073)                                #
#  - 기본적인 액수 결정 기준은 플레이어의 수도에서 상대편 수도까지의 거리이며, #
#    거리가 멀수록 금화의 액수가 커진다. 거리 100당 77골드로 설정되어 있다.    #
#  - 계산된 액수에 엔딩에 따라서 다른 기준에 따라 추가 금화 지급이 될 수도 있  #
#    다.                                                                       #
#  - 요청에 의한 파송의 경우 일부 고정 금액이 정해진 경우도 있다.              #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3071
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {

		#----------------------------------------------------------------------#
		# 준비 : 계산의 변수 마련을 위해 고아의 현재 소지 골드를 확인          #
		# 사실 거의 99.9%의 경우 고아에게 골드가 있을 리가 없어서, 이 과정은   #
		# 생략해도 된다.                                                       #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				NOT = { wealth = 10 }
			}
			set_variable = { which = "payback_amount" value = 10 }
		}

		if = {
			limit = {
				wealth = 10
				NOT = { wealth = 20 }
			}
			set_variable = { which = "payback_amount" value = 20 }
		}

		if = {
			limit = {
				wealth = 20
				NOT = { wealth = 30 }
			}
			set_variable = { which = "payback_amount" value = 30 }
		}

		if = {
			limit = {
				wealth = 30
				NOT = { wealth = 40 }
			}
			set_variable = { which = "payback_amount" value = 40 }
		}

		if = {
			limit = {
				wealth = 40
				NOT = { wealth = 50 }
			}
			set_variable = { which = "payback_amount" value = 50 }
		}

		if = {
			limit = {
				wealth = 50
				NOT = { wealth = 60 }
			}
			set_variable = { which = "payback_amount" value = 60 }
		}

		if = {
			limit = {
				wealth = 60
				NOT = { wealth = 70 }
			}
			set_variable = { which = "payback_amount" value = 70 }
		}

		if = {
			limit = {
				wealth = 70
				NOT = { wealth = 80 }
			}
			set_variable = { which = "payback_amount" value = 80 }
		}

		if = {
			limit = {
				wealth = 80
				NOT = { wealth = 90 }
			}
			set_variable = { which = "payback_amount" value = 90 }
		}

		if = {
			limit = {
				wealth = 90
				NOT = { wealth = 100 }
			}
			set_variable = { which = "payback_amount" value = 100 }
		}

		if = {
			limit = {
				wealth = 100
			}
			set_variable = { which = "payback_amount" value = 110 }
		}

		event_target:mod_event_target_ruler = {
			character_event = {
				id = OPG.3072
			}
		}
	}
}

character_event = {

	id = OPG.3072
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	#--------------------------------------------------------------------------#
	# 기본 계산식의 정의:                                                      #
	#  - 최소값 : 33골드                                                       #
	#  - 거리비례 : 거리 100 당 일정 골드 추가                                 #
	#    (1000 까지는 33, 2000까지는 39, 3000까지는 47, 3000 이상은 53)        #
	#--------------------------------------------------------------------------#

	immediate = {

		#----------------------------------------------------------------------#
		# 일부 고정값을 계산하는 이벤트의 경우 계산식에 진입하지 않고 바로 값  #
		# 을 입력하고 다음으로 넘어간다.                                       #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					has_character_flag = mod_event_check_flag_orphan_for_monk
				}
			}
			event_target:mod_event_target_orphan = {
				clear_wealth = yes	# 일단 초기화
				wealth = 30			# 고정값

				character_event = {
					id = OPG.3073
				}
			}

			break = yes
		}

		#----------------------------------------------------------------------#
		# 변수 초기화 및 최소값 입력                                           #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			clear_wealth = yes	# 일단 초기화
			wealth = 33			# 최소값
		}

		#----------------------------------------------------------------------#
		# 플레이어와 상대방 군주의 수도 프로빈스를 이벤트 스코프로 정의        #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			capital_scope = {
				save_event_target_as = mod_event_target_my_capital_province
			}
		}

		event_target:mod_event_target_ruler = {
			capital_scope = {
				save_event_target_as = mod_event_target_ruler_capital_province
			}
		}

		#----------------------------------------------------------------------#
		# 둘 사이의 거리 비례로 값 계산                                        #
		# 1000 까지는 33, 2000까지는 39, 3000까지는 47, 3000 이상은 53         #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 100
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 200
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 300
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 400
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 500
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 600
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 700
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 800
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 900
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 33
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1000
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1100
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1200
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1300
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1400
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1500
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1600
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1700

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1800

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 1900

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 39
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2000

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2100

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2200

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2300

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2400

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2500

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2600

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2700

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2800

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 2900

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 47
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3000

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3100

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3200

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3300

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3400

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3500

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3600

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3700

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3800

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 3900

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4000

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4100

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4200

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4300

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4400

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4500

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4600

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4700

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4800

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 4900

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 5000

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 5100

					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		if = {
			limit = {
				event_target:mod_event_target_my_capital_province = {
					distance = {
						where = event_target:mod_event_target_ruler_capital_province
						value = 5200
					}
				}
			}
			event_target:mod_event_target_orphan = {
				wealth = 53
			}
		}

		#----------------------------------------------------------------------#
		# 계산이 끝났으므로 두 프로빈스 이벤트 스코프는 해제                   #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_my_capital_province
		clear_event_target = mod_event_target_ruler_capital_province

		#----------------------------------------------------------------------#
		# 고아 스코프로 다음 이벤트 실행                                       #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			character_event = {
				id = OPG.3073
			}
		}
	}
}

character_event = {

	id = OPG.3073
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {

		#----------------------------------------------------------------------#
		# 일부 고정값을 계산하는 이벤트의 경우 별도의 룰에 의하거나 추가값을   #
		# 계산하지 않는다.                                                     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_monk
			}

			event_target:mod_event_target_ruler = {
				character_event = {
					id = OPG.3074
				}
			}
			break = yes
		}

		#----------------------------------------------------------------------#
		# 계산된 거리기준 골드에 기타 요소들을 반영                            #
		#----------------------------------------------------------------------#

		## 유전적 우성 트레잇

		if = {
			limit = {
				trait = fair
			}
			wealth = 101
		}

		if = {
			limit = {
				trait = genius
			}
			wealth = 111
		}

		if = {
			limit = {
				trait = quick
			}
			wealth = 77
		}

		if = {
			limit = {
				trait = strong
			}
			wealth = 77
		}

		## 후천적 우성 트레잇

		if = {
			limit = {
				trait = robust
			}
			wealth = 51
		}

		if = {
			limit = {
				trait = shrewd
			}
			wealth = 51
		}

		## 유전적 열성 트레잇

		if = {
			limit = {
				OR = {
					trait = clubfooted
					trait = harelip
					trait = hunchback
					trait = lisp
					trait = stutter
					trait = ugly
					trait = dwarf
					trait = slow
					trait = imbecile
					trait = inbred
					trait = weak
				}
			}
			wealth = -40

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		if = {
			limit = {
				calc_true_if = {
					amount = 2
					trait = clubfooted
					trait = harelip
					trait = hunchback
					trait = lisp
					trait = stutter
					trait = ugly
					trait = dwarf
					trait = slow
					trait = imbecile
					trait = inbred
					trait = weak
				}
			}
			wealth = -26

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		if = {
			limit = {
				calc_true_if = {
					amount = 4
					trait = clubfooted
					trait = harelip
					trait = hunchback
					trait = lisp
					trait = stutter
					trait = ugly
					trait = dwarf
					trait = slow
					trait = imbecile
					trait = inbred
					trait = weak
				}
			}
			wealth = -26

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		## 여성의 경우

		if = {
			limit = {
				OR = {
					trait = clubfooted
					trait = harelip
					trait = hunchback
					trait = ugly
					trait = dwarf
					trait = inbred
					trait = weak
				}
				is_female = yes
			}
			wealth = -45

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		if = {
			limit = {
				OR = {
					trait = hunchback
					trait = lisp
					trait = slow
					trait = imbecile
					trait = inbred
					trait = weak
				}
				is_female = no
			}
			wealth = -48

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		## 후천적 열성 트레잇

		if = {
			limit = {
				OR = {
					trait = dull
					trait = feeble
				}
			}
			wealth = -31

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		## 동일한 문화(권)

		if = {
			limit = {
				culture_group = event_target:mod_event_target_ruler
			}
			wealth = 13
		}

		if = {
			limit = {
				culture = event_target:mod_event_target_ruler
			}
			wealth = 27
		}

		## 동일한 종교

		if = {
			limit = {
				religion = event_target:mod_event_target_ruler
			}
			wealth = 38
		}

		## 이단

		if = {
			limit = {
				OR = {
					ROOT = {
						is_heresy_of = event_target:mod_event_target_ruler
					}
					event_target:mod_event_target_ruler = {
						is_heresy_of = ROOT
					}
				}
			}
			wealth = -49

			if = {
				limit = {
					NOT = { wealth = 33 }
				}
				clear_wealth = yes
				wealth = 33
			}
		}

		## 기타 이벤트에 의한 증감

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_concubine
			}
			wealth = 500
		}

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_adopting
			}
			wealth = 700
		}
		

		event_target:mod_event_target_ruler = {
			character_event = {
				id = OPG.3074
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 고아의 도착을 알리는 편지 (3074~3075)                                        #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3074
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3075
				days = 7
			}
		}
	}
}

letter_event = {

	id = OPG.3075
	desc = EVTDESC_OPG_3075

	# mod_event_target_ruler 
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3075

		#----------------------------------------------------------------------#
		# A. 전액을 수령한다.                                                  #
		#----------------------------------------------------------------------#

		ROOT = {
			wealth = event_target:mod_event_target_orphan

			hidden_tooltip = {
				character_event = {
					id = OPG.3076
					days = 4
				}
			}
		}
		event_target:mod_event_target_orphan = {
			hidden_tooltip = {
				clear_wealth = yes
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3075

		#----------------------------------------------------------------------#
		# B. 일부만 수령하고 대신 신앙심을 얻는다.                             #
		#----------------------------------------------------------------------#

		ROOT = {
			custom_tooltip = {
				text = CUSTOM_TOOLTIP_ADOPT_ORPHAN_ABROAD_HALF_WEALTH
				hidden_tooltip = {
					event_target:mod_event_target_orphan = {
						if = {
							limit = {
								wealth = 3200
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 3100
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 3000
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2900
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2800
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2700
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2600
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2500
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2400
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2300
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2200
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2100
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 2000
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1900
							}
							wealth = -950
						}
						if = {
							limit = {
								wealth = 1800
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1700
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1600
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1500
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1400
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1300
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1200
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1100
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 1000
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 900
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 800
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 700
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 600
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 500
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 400
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 300
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 200
							}
							wealth = -50
						}
						if = {
							limit = {
								wealth = 100
							}
							wealth = -50
						}
					}

					wealth = event_target:mod_event_target_orphan
				}
			}

			piety = 35

			hidden_tooltip = {
				character_event = {
					id = OPG.3076
					days = 4
				}
			}
		}
		event_target:mod_event_target_orphan = {
			hidden_tooltip = {
				clear_wealth = yes
			}
		}
	}
}

#------------------------------------------------------------------------------#
# * 입양간 고아에게 지참금을 보낸다 (3076~3079)                                #
#   (사실은 뺏었던 돈 이자 조금 붙여서 돌려주는 셈. 내가 뺏은 건 아니지만.)    #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3076
	desc = EVTDESC_OPG_3076
	picture = GFX_evt_nemo_order_someone

	# mod_event_target_ruler 
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3076
		event_target:mod_event_target_orphan = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3077
				}
			}
		}
	}
}

character_event = {

	id = OPG.3077
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {
		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 10 }
			}
			wealth = 10
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 20 }
			}
			wealth = 20
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 30 }
			}
			wealth = 30
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 40 }
			}
			wealth = 40
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 50 }
			}
			wealth = 50
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 60 }
			}
			wealth = 60
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 70 }
			}
			wealth = 70
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 80 }
			}
			wealth = 80
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 90 }
			}
			wealth = 90
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 100 }
			}
			wealth = 100
		}

		if = {
			limit = {
				is_variable_equal = { which = "payback_amount" value = 110 }
			}
			wealth = 110
		}

		hidden_tooltip = {
			set_variable = { which = "payback_amount" value = 0 }
		}

		event_target:mod_event_target_ruler = {
			character_event = {
				id = OPG.3078
			}
		}
	}
}

character_event = {

	id = OPG.3078
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3079
				days = 5
			}
		}
	}
}

letter_event = {

	id = OPG.3079
	desc = EVTDESC_OPG_3079

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3079
		ROOT = {
			piety = 10
		}

		#----------------------------------------------------------------------#
		# 엔딩이 정해진 고아의 경우 엔딩 결정 루프를 생략하게 된다.            #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					OR = {
						has_character_flag = mod_event_check_flag_orphan_for_monk
						AND = {
							has_character_flag = mod_event_check_flag_orphan_for_companion
							has_character_flag = mod_event_orphan_ending_flag_22
						}
						has_character_flag = mod_event_check_flag_orphan_for_concubine
						has_character_flag = mod_event_check_flag_orphan_for_adopting
					}
				}
			}

			if = {
				limit = {
					has_character_flag = mod_event_check_flag_orphan_for_adopting
				}
				clr_character_flag = mod_event_check_flag_orphan_for_adopting
			}

			hidden_tooltip = {
				event_target:mod_event_target_orphan = {
					character_event = {
						id = OPG.3101
						days = 60
					}
				}
				break = yes
			}
		}

		#----------------------------------------------------------------------#
		# 이제 고아에게 60일의 시간이 주어지며, 그 안에 일어나는 결정 이벤트에 #
		# 의해 고아의 운명이 결정된다...                                       #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				set_character_flag = mod_event_temporary_flag_selecting_orphan_ending
			}
			event_target:mod_event_target_orphan = {
				set_character_flag = mod_event_temporary_flag_target_orphan
				character_event = {
					id = OPG.3101
					days = 60
				}
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 각종 엔딩 결정 이벤트 (3081~3099)                                            #
# - 이 이벤트는 고아를 입양한 군주에게 랜덤하게 발생하며, 그 결과에 따라서 고  #
#   아의 스토리 엔딩이 결정된다.                                               #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3081
	hide_window = yes

	only_rulers = yes
	prisoner = no
	has_character_flag = mod_event_temporary_flag_selecting_orphan_ending

	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 고아를 입양한 군주                                                   #
		#----------------------------------------------------------------------#

		has_character_flag = mod_event_temporary_flag_selecting_orphan_ending
		had_character_flag = { flag = mod_event_temporary_flag_selecting_orphan_ending days = 7 }

		OR = {
			is_common_adult_npc_trigger = yes
			AND = {
				prisoner = no
				is_adult = yes
				NOT = { trait = incapable }
				is_alive = yes
			}
		}

		#----------------------------------------------------------------------#
		# 가신으로 들어온 고아가 존재할 것                                     #
		#----------------------------------------------------------------------#

		any_realm_character = {
			has_character_flag = mod_event_temporary_flag_target_orphan
		}
	}

	mean_time_to_happen = {
		days = 14
	}

	immediate = {
		random_realm_character = {
			limit = {
				has_character_flag = mod_event_temporary_flag_target_orphan
			}
			character_event = {
				id = OPG.3082
			}
		}
	}
}

character_event = {

	id = OPG.3082
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			character_event = {
				id = OPG.3083
			}
		}
	}
}

character_event = {

	id = OPG.3083
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 이미 엔딩이 결정된 경우에는 이벤트를 중단한다.                       #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				FROM = {
					OR = {

						#------------------------------------------------------#
						# 일반 엔딩                                            #
						#------------------------------------------------------#

						has_character_flag = mod_event_orphan_ending_flag_02
						has_character_flag = mod_event_orphan_ending_flag_03
						has_character_flag = mod_event_orphan_ending_flag_04
						has_character_flag = mod_event_orphan_ending_flag_05
						has_character_flag = mod_event_orphan_ending_flag_06
						has_character_flag = mod_event_orphan_ending_flag_07
						has_character_flag = mod_event_orphan_ending_flag_08
						has_character_flag = mod_event_orphan_ending_flag_09
						has_character_flag = mod_event_orphan_ending_flag_10
						has_character_flag = mod_event_orphan_ending_flag_11
						has_character_flag = mod_event_orphan_ending_flag_12
						has_character_flag = mod_event_orphan_ending_flag_13
						has_character_flag = mod_event_orphan_ending_flag_14
						has_character_flag = mod_event_orphan_ending_flag_15
						has_character_flag = mod_event_orphan_ending_flag_16

						#------------------------------------------------------#
						# 요청 파송에 특수한 엔딩                              #
						#------------------------------------------------------#

						has_character_flag = mod_event_orphan_ending_flag_21
						has_character_flag = mod_event_orphan_ending_flag_22
						has_character_flag = mod_event_orphan_ending_flag_23
					}
				}
			}
			break = yes
		}

		#----------------------------------------------------------------------#
		# 반드시 특정 엔딩 중 하나가 발생해야 하는 경우                        #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				FROM = {
					has_character_flag = mod_event_check_flag_orphan_for_companion
				}
			}
			character_event = {
				id = OPG.3093
			}
			break = yes
		}

		#----------------------------------------------------------------------#
		# 고아 가신과의 상호작용을 위한 여러 가지 이벤트들                     #
		# 최소 7일 이후, 14일마다(시스템상 20일마다) 발생하므로 60일 사이에는  #
		# 정말 많이 발생하면 2회 정도 발생할 것이 예상된다.                    #
		# 고아 스코프가 FROM, 군주 스코프가 ROOT 이다.                         #
		#----------------------------------------------------------------------#

		random_list = {
			10 = {
				modifier = {
					factor = 0
					OR = {
						AND = {
							same_sex = FROM
							NOT = { trait = homosexual }
						}
						AND = {
							NOT = { same_sex = FROM }
							trait = homosexual
						}
						trait = chaste
					}
				}
				character_event = {
					id = OPG.3084
				}
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						trait = patient
						trait = kind
					}
				}
				character_event = {
					id = OPG.3086
				}
			}
			10 = {
				character_event = {
					id = OPG.3088
				}
			}
			10 = {
				modifier = {
					factor = 0
					religion = FROM
				}
				character_event = {
					id = OPG.3089
				}
			}
			10 = {
				modifier = {
					factor = 0
					NOT = {
						ROOT = {
							trait = chaste
						}
						FROM = {
							trait = lustful
						}
					}
					NOT = {
						ROOT = {
							trait = temperate
						}
						FROM = {
							OR = {
								trait = gluttonous
								AND = {
									has_dlc = "Zeus"
									trait = indolent
								}
							}
						}
					}
					NOT = {
						ROOT = {
							trait = charitable
						}
						FROM = {
							trait = greedy
						}
					}
					NOT = {
						ROOT = {
							trait = diligent
						}
						FROM = {
							OR = {
								trait = slothful
								AND = {
									has_dlc = "Zeus"
									trait = indolent
								}
							}
						}
					}
					NOT = {
						ROOT = {
							trait = patient
						}
						FROM = {
							trait = wroth
						}
					}
					NOT = {
						ROOT = {
							trait = kind
						}
						FROM = {
							OR = {
								trait = envious
								trait = cruel
								AND = {
									has_dlc = "Zeus"
									trait = haughty
								}
							}
						}
					}
					NOT = {
						ROOT = {
							trait = humble
						}
						FROM = {
							OR = {
								trait = proud
								AND = {
									has_dlc = "Zeus"
									trait = haughty
								}
							}
						}
					}
				}
				character_event = {
					id = OPG.3091
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3084
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 성적 충동 이벤트                                                         #
	#--------------------------------------------------------------------------#
	# 고아와 군주가 서로 다른 성별이거나 Homosexual 트레잇을 가진 상태의 같은  #
	# 성별일 경우에 발생할 수 있다.                                            #
	# - Chaste 트레잇을 가진 경우에는 발생하지 않는다.                         #
	# - 성별이 다르거나, 성별이 같고 Homosexual 인 경우에만 발생한다.          #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 오늘 밤 저 아이는 내 침실에 오게 될 것이다.                       #
		#  - 기본 선택 확률 : 25%                                              #
		#  - Lustful, Hedonist, Seducer, Decadent 트레잇을 가진 경우 확률 증가 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 25
			modifier = {
				factor = 2.5
				trait = lustful
			}
			modifier = {
				factor = 2.0
				trait = hedonist
			}
			modifier = {
				factor = 2.0
				trait = seducer
			}
			modifier = {
				factor = 2.0
				trait = decadent
			}
		}

		#----------------------------------------------------------------------#
		# 고아에게 선택 이벤트가 발생한다.                                     #
		#----------------------------------------------------------------------#

		FROMFROM = {
			character_event = {
				id = OPG.3085
			}	
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 이 무슨 터무니없이 불경한 생각인가! 상대는 어린 아이야!           #
		#   - 기본 선택 확률 : 75%                                             #
		#   - Zealous, Kind, Just, Patient 트레잇을 가진 경우 확률 증가.       #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 75
			modifier = {
				factor = 2.0
				trait = zealous
			}
			modifier = {
				factor = 1.5
				trait = kind
			}
			modifier = {
				factor = 1.5
				trait = just
			}
			modifier = {
				factor = 1.5
				trait = patient
			}
		}
	}
}

character_event = {

	id = OPG.3085
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 군주의 성적 학대에 대한 고아의 대응 이벤트                               #
	#--------------------------------------------------------------------------#
	# 성적 학대 이벤트(OPG.3084)가 발생한 경우에 고아는 그 대응을 선택할 수 있 #
	# 다.                                                                      #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고통스럽게 비인간적 대우를 감내하는 선택 (엔딩 2)                 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 30
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = timid
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = indolent
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = humble
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = shy
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = craven
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = slothful
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_02
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 감시가 소홀한 틈을 타 도망치는 선택 (엔딩 3)                      #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 40
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = willful
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = rowdy
			}

			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = ambitious  
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = deceitful
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = brave 
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_03
	}
	option = {
		name = EVTOPTC_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# C. 군주 살해(를 시도) 후 자살하는 선택 (엔딩 4)                      #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 20
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = haughty
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = idolizer
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = arbitrary   
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = proud 
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = zealous  
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_04
	}
	option = {
		name = EVTOPTD_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# D. 고아가 원초적 본능에 눈뜨는 선택 (엔딩 5)                         #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				trait = playful
			}
			modifier = {
				factor = 1.5
				trait = lunatic 
			}	
		}

		set_character_flag = mod_event_orphan_ending_flag_05
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3086
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 폭력적 성향 이벤트                                                       #
	#--------------------------------------------------------------------------#
	# - Patient, Kind 트레잇을 가진 경우에는 발생하지 않는다.                  #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 폭력적 성향을 고아에게 표출한다.                                  #
		#  - 기본 선택 확률 : 35%                                              #
		#  - Cruel, Wroth, Impaler, Paranoid, Possessed 트레잇을 가진 경우     #
		#    확률 증가                                                         #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 35
			modifier = {
				factor = 2.0
				trait = impaler
			}
			modifier = {
				factor = 2.0
				trait = wroth
			}
			modifier = {
				factor = 2.0
				trait = cruel
			}
			modifier = {
				factor = 1.5
				trait = paranoid
			}
			modifier = {
				factor = 1.5
				trait = possessed
			}
		}

		#----------------------------------------------------------------------#
		# 고아에게 선택 이벤트가 발생한다.                                     #
		#----------------------------------------------------------------------#

		FROMFROM = {
			character_event = {
				id = OPG.3087
			}	
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 아이에게 무슨 짓인가! 그래선 안 된다!                             #
		#   - 기본 선택 확률 : 65%                                             #
		#   - Just, Temperate, Gregarious 트레잇을 가진 경우 확률 증가.        #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 65
			modifier = {
				factor = 2.5
				trait = just
			}
			modifier = {
				factor = 2.5
				trait = temperate
			}
			modifier = {
				factor = 1.5
				trait = gregarious
			}
		}
	}
}

character_event = {

	id = OPG.3087
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 군주의 폭력적 성향에 대한 고아의 대응 이벤트                             #
	#--------------------------------------------------------------------------#
	# 폭력적 성향 이벤트(OPG.3086)가 발생한 경우에 고아는 그 대응을 선택할 수  #
	# 있다.                                                                    #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고통스럽게 비인간적 대우를 감내하는 선택 (엔딩 6)                 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = timid
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = indolent
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = humble
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = shy
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = craven
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = slothful
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_06
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 감시가 소홀한 틈을 타 도망치는 선택 (엔딩 7)                      #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 30
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = willful
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = rowdy
			}

			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = ambitious  
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = deceitful
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = brave 
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_07
	}
	option = {
		name = EVTOPTC_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# C. 군주 살해(를 시도) 후 도망치는 선택 (엔딩 8)                      #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 20
			modifier = {
				factor = 2.0
				has_dlc = "Zeus"
				trait = haughty
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = idolizer
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = arbitrary   
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = proud 
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = zealous  
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_08
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3088
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 양자/양녀 입양 이벤트                                                    #
	#--------------------------------------------------------------------------#
	# 고아가 정식 자녀로 입양된다.                                             #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고아를 정식 자녀로 입양한다 (엔딩 9)                              #
		#  - 기본 선택 확률 : 45%                                              #
		#  - Conclave DLC 를 사용하지 않고, 아들/딸을 얻음 야망을 갖고 있는 경 #
		#    우(Conclave DLC 에서는 선택 불가), 성별이 맞는다면 선택 확률이 상 #
		#    승한다.                                                           #
		#  - 현재 자녀가 없거나 1명인 경우 선택 확률이 상승한다.               #
		#  - 어느 한 쪽 성별이 없는 경우 없는 쪽 성별은 선택 확률이 상승한다.  #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 45
			modifier = {
				factor = 1.8
				NOT = { has_dlc = "Zeus" }
				OR = {
					AND = {
						has_ambition = obj_have_a_daughter
						FROMFROM = { is_female = no }
					}
					AND = {
						has_ambition = obj_have_a_son
						FROMFROM = { is_female = yes }
					}
				}
			}
			modifier = {
				factor = 1.6
				NOT = { num_of_children = 2 }
			}
			modifier = {
				factor = 1.6
				OR = {
					AND = {
						NOT = {
							any_child = {
								count = 1
								is_female = no
							}
						}
						FROMFROM = { is_female = no }
					}
					AND = {
						NOT = {
							any_child = {
								count = 1
								is_female = yes
							}
						}
						FROMFROM = { is_female = yes }
					}
				}
			}
		}

		FROMFROM = {
			set_character_flag = mod_event_orphan_ending_flag_09
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 사랑스럽긴 하지만, 그래도 정식 자녀로 입양은 안 된다.             #
		#  - 현재 자녀 수가 8명 이상인 경우 선택 확률이 감소한다.              #
		#  - 현재 자녀 수가 5명 이상이고, 어느 한 쪽이 2명 이상인 경우 선택 확 #
		#    률이 감소한다.                                                    #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 55
			modifier = {
				factor = 2.0
				num_of_children = 8
			}
			modifier = {
				factor = 1.6
				num_of_children = 5
				OR = {
					any_child = {
						count = 2
						is_female = no
					}
					any_child = {
						count = 2
						is_female = yes
					}
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3089
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 종교 문제 이벤트                                                         #
	#--------------------------------------------------------------------------#
	# 서로 같은 종교일 경우 이 엔딩은 발생하지 않는다.                         #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고아에게 종교의 개종을 강요한다                                   #
		#  - 기본 선택 확률 : 45%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 45
			modifier = {
				factor = 2.0
				trait = zealous
			}
			modifier = {
				factor = 1.8
				FROMFROM = { is_heresy_of = ROOT }
			}
		}

		#----------------------------------------------------------------------#
		# 고아에게 선택 이벤트가 발생한다.                                     #
		#----------------------------------------------------------------------#

		FROMFROM = {
			character_event = {
				id = OPG.3090
			}	
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 고아에게 종교의 개종을 강요하지 않는다. (엔딩 10)                 #
		#  - 기본 선택 확률 : 50%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
			modifier = {
				factor = 2.0
				trait = cynical
			}
		}

		FROMFROM = {
			set_character_flag = mod_event_orphan_ending_flag_10
		}
	}

	option = {
		name = EVTOPTC_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# C. 고아의 종교에 관심을 갖는다. (엔딩 11)                            #
		#  - 기본 선택 확률 : 5%                                               #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 5
			modifier = {
				factor = 4.0
				has_character_modifier = the_necronomicon	# 원본의 Necronomicon 이벤트의 결과
			}
			modifier = {
				factor = 2.0
				ROOT = { is_heresy_of = FROMFROM }
			}
		}

		FROMFROM = {
			set_character_flag = mod_event_orphan_ending_flag_11
		}
	}
}

character_event = {

	id = OPG.3090
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 고아에 대한 개종 강요에 대한 고아의 대응                                 #
	#--------------------------------------------------------------------------#
	# 개종 강요에 대해 고아는 다음의 선택지를 선택 가능하다.                   #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 개종을 받아들인다 (엔딩 12)                                       #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 45

			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = indolent
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = affectionate
			}
			modifier = {
				factor = 0
				#NOT = { has_dlc = "Zeus" }
				trait = zealous
			}
			modifier = {
				factor = 2.5
				NOT = { has_dlc = "Zeus" }
				trait = cynical
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_12
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 끊임없는 개종 요구에 괴로워한다 (엔딩 13)                         #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 45
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = idolizer
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = timid
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_13
	}
	option = {
		name = EVTOPTC_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# C. 나의 종교의 올바름을 역설한다 (엔딩 14 : 이단종교인 경우)         #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 10
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = willful
			}
			modifier = {
				factor = 2.5
				#NOT = { has_dlc = "Zeus" }
				trait = zealous
			}
		}
		trigger = {
			OR = {
				FROM = { is_heresy_of = ROOT }
				ROOT = { is_heresy_of = FROM }
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_14
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3091
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 고아의 성격과 군주의 성격이 충돌                                         #
	#--------------------------------------------------------------------------#
	# 충돌 트레잇이 있을 경우에만 이 이벤트가 발생한다.                        #
	# Conclave DLC 를 사용중인 경우 성인 트레잇이 미성년기에는 붙지 않기 때문  #
	# 에, 유년기 성격 트레잇을 기준으로 하여 넓게 처리한다.                    #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고아의 성격 교정을 시도한다                                       #
		#  - 기본 선택 확률 : 65%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 65
			modifier = {
				factor = 1.9
				trait = just
			}
			modifier = {
				factor = 1.8
				trait = diligent
			}
		}


		#----------------------------------------------------------------------#
		# 고아에게 선택 이벤트가 발생한다.                                     #
		#----------------------------------------------------------------------#

		FROMFROM = {
			character_event = {
				id = OPG.3092
			}	
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 고아의 성격을 굳이 고칠 필요가 없다                               #
		#  - 기본 선택 확률 : 35%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 35
			modifier = {
				factor = 1.9
				trait = arbitrary
			}
			modifier = {
				factor = 1.8
				trait = slothful
			}
		}
	}
}

character_event = {

	id = OPG.3092
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 군주의 교정 시도에 대한 고아의 반응                                      #
	#--------------------------------------------------------------------------#
	# 군주의 교정 시도에 대해 고아는 성격을 바꾸거나 바꾸지 않을 수 있다       #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 고아가 군주의 성격 교정 훈육을 받아들인다 (엔딩 15)               #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = affectionate
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = conscientious
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = content
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = diligent
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_15
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 군주의 훈육이 실패한다 (엔딩 16)                                  #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = rowdy
			}
			modifier = {
				factor = 1.5
				has_dlc = "Zeus"
				trait = haughty
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = proud
			}
			modifier = {
				factor = 1.5
				NOT = { has_dlc = "Zeus" }
				trait = slothful
			}
		}

		set_character_flag = mod_event_orphan_ending_flag_16
	}
}

#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3093
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# 시동으로 데려온 고아가 다른 성별인 경우                                  #
	#--------------------------------------------------------------------------#
	# 기본 확률 :                                                              #
	# 70% 확률로 엔딩 23 (시동 이성 노멀)                                      #
	# 20% 확률로 엔딩 2                                                        #
	# 10% 확률로 엔딩 5                                                        #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 보통의 시동으로 대우한다                                          #
		#  - 기본 선택 확률 : 70%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 70
			modifier = {
				factor = 2
				trait = just
			}
		}

		FROMFROM = {
			set_character_flag = mod_event_orphan_ending_flag_23
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 욕정을 참을 수 없다                                               #
		#  - 기본 선택 확률 : 30%                                              #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.9
				trait = lustful
			}
			modifier = {
				factor = 1.8
				trait = hedonist
			}
			modifier = {
				factor = 0
				trait = homosexual
			}
			modifier = {
				factor = 0
				trait = chaste
			}
			modifier = {
				factor = 0
				is_female = yes
			}
		}

		FROMFROM = {
			random_list = {
				33 = {
					clr_character_flag = mod_event_check_flag_orphan_for_companion
					set_character_flag = mod_event_orphan_ending_flag_05
				}
				66 = {
					clr_character_flag = mod_event_check_flag_orphan_for_companion
					set_character_flag = mod_event_orphan_ending_flag_02
				}
			}
		}
	}
}










#------------------------------------------------------------------------------#
# 다른 군주에게 보내진 고아 : 엔딩 (3101~3103 -> 개별 엔딩)                    #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3101
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {

		#----------------------------------------------------------------------#
		# 엔딩 결정을 위한 이벤트 실행을 중단한다.                             #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			clr_character_flag = mod_event_temporary_flag_target_orphan
			clr_character_flag = mod_event_temporary_flag_npc_adopt_orphan_abroad_recommend
		}
		event_target:mod_event_target_ruler = {
			clr_character_flag = mod_event_temporary_flag_selecting_orphan_ending
		}

		#----------------------------------------------------------------------#
		# 플레이어에게 편지 이벤트를 실행시킨다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3102
			}
		}
	}
}


character_event = {

	id = OPG.3102
	desc = EVTDESC_OPG_3102
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes
	hide_from = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3102
		hidden_tooltip = {
			event_target:mod_event_target_orphan = {
				character_event = {
					id = OPG.3103
				}
			}
		}
	}
}

character_event = {

	id = OPG.3103
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player (FROM)
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {

		#----------------------------------------------------------------------#
		# 결정된 엔딩에 따라서 개별 이벤트로 이동한다.                         #
		# 개별 엔딩 이벤트의 시작은 플레이어의 스코프이다.                     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_02
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3121
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_03
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3131
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_04
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3141
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_05
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3151
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_06
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3161
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_07
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3171
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_08
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3181
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_09
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3191
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_10
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3201
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_11
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3211
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_12
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3221
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_13
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3231
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_14
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3241
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_15
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3251
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_16
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3261
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_21
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3271
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_22
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3273
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_23
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3275
				}
			}
			break = yes
		}
		if = {
			limit = {
				has_character_flag = mod_event_orphan_ending_flag_24
			}
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3277
				}
			}
			break = yes
		}

		#----------------------------------------------------------------------#
		# 어떤 태그도 붙지 않았다면 노멀 엔딩으로 간다.                        #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3111
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 엔딩 1. 평범한 가신으로 남다                                                 #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3111
	desc = EVTDESC_OPG_3111

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3111
		hidden_tooltip = {
			letter_event = {
				id = OPG.3112
			}		
		}
	}
}

letter_event = {

	id = OPG.3112
	desc = EVTDESC_OPG_3112

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3112

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			#clr_character_flag = mod_event_orphan_ending_flag_01
			set_character_flag = mod_event_check_flag_ending_category_01

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 2. 군주의 성적 학대를 당하고 있는 고아 (1)                              #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3121
	desc = EVTDESC_OPG_3121

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3121
		hidden_tooltip = {
			letter_event = {
				id = OPG.3122
			}		
		}
	}
}

letter_event = {

	id = OPG.3122
	desc = EVTDESC_OPG_3122

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3122

		#----------------------------------------------------------------------#
		# A. 할 수 있는 일이 없다. (이벤트 종료)                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_02
			set_character_flag = mod_event_check_flag_ending_category_02

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTB_OPG_3122
		trigger = {
			job_spymaster = {
				always = yes
			}
			any_courtier = {
				is_orphanage_nurse_trigger = yes
			}
		}

		#----------------------------------------------------------------------#
		# B. 보모와 첩보관을 파견하여 고아를 구출한다                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_02
			set_character_flag = mod_event_check_flag_ending_category_02

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		custom_tooltip = {
			text = CUSTOM_TOOLTIP_CALL_SPYMASTER_AND_ORPHANAGE_NURSE_TO_RESCUE_ORPHAN
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 현재 첩보관이 임무 수행중이었다면 그 임무를 취소한다.        #
				#--------------------------------------------------------------#

				if = {
					limit = {
						job_spymaster = {
							has_job_action = yes
						}
					}
					job_spymaster = {
						if = {
							limit = {
								has_job_action = action_uncover_plots 
							}
							cancel_job_action = action_uncover_plots
						}

						if = {
							limit = {
								has_job_action = action_study_technology 
							}
							cancel_job_action = action_study_technology
						}

						if = {
							limit = {
								has_job_action = action_organize_spies 
							}
							cancel_job_action = action_organize_spies
						}
					}
				}

				#--------------------------------------------------------------#
				# 현재 고아원 보모가 임무 수행중(종군중)이었다면 복귀시킨다.   #
				#--------------------------------------------------------------#

				if = {
					limit = {
						any_courtier = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
					}
					random_courtier = {
						limit = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
						clr_character_flag = mod_character_event_flag_mission_to_battlefield

						add_character_modifier = {
							name = mod_event_interval_notification_flag_modifier_mission_to_battlefield
							duration = 1825
						}
					}
				}

				#--------------------------------------------------------------#
				# 후속 이벤트 - 구출 로 이어진다                               #
				#--------------------------------------------------------------#

				event_target:mod_event_target_player = {
					character_event = {
						id = OPG.3321
						days = 5
					}
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 엔딩 3. 군주의 성적 학대를 당하고 있는 고아 (2) - 도주                       #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3131
	desc = EVTDESC_OPG_3131

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3131
		hidden_tooltip = {
			letter_event = {
				id = OPG.3132
			}		
		}
	}
}

letter_event = {

	id = OPG.3132
	desc = EVTDESC_OPG_3132

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3132

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 후속 이벤트에 필요한 플래그를 일단 붙여 둔다                     #
			# 이후 결론은 죽거나 돌아오거나이므로, 굳이 오피니언 모디파이어는  #
			# 따로 붙이지 않는다.                                              #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_03
			set_character_flag = mod_event_check_flag_ending_category_03
		}

		event_target:mod_event_target_ruler = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3133
				}
			}
		}
	}
}

character_event = {

	id = OPG.3133
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player 
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 영주의 선택 - 무슨 수를 쓰더라도 잡아서 내 앞에 데려와라!         #
		#    : 게임 시간 5일 후 후속 이벤트 (처형) 으로 이어짐                 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}
		event_target:mod_event_target_player = {

			set_character_flag = mod_event_temporary_flag_letter_for_ending_3

			character_event = {
				id = OPG.3301
				days = 5
			}
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 영주의 선택 - 꼬마 하나 도망간 건 신경쓸 것 없다. 대충 찾아보라.  #
		#    : 게임 시간 14일 후 후속 이벤트 (편지) 으로 이어짐                #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3311
				days = 14
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 엔딩 4. 군주의 성적 학대를 당하고 있는 고아 (3) - 살해 (시도) 후 자살        #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3141
	desc = EVTDESC_OPG_3141

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3141
		hidden_tooltip = {
			letter_event = {
				id = OPG.3142
			}		
		}
	}
}

letter_event = {

	id = OPG.3142
	desc = EVTDESC_OPG_3142

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3142

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 어떤 결과가 나오더라도 후속 이벤트는 고아와 관계되지 않으므로 플 #
			# 래그는 붙이지 않아도 된다. 오피니언 모디파이어 역시 고아가 사망  #
			# 하므로 붙일 필요가 없다.                                         #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_03
		}

		random_list = {

			#------------------------------------------------------------------#
			# 75% : 고아의 계획이 성공 : 군주 사망, 고아 자살                  #
			#------------------------------------------------------------------#

			75 = {
				event_target:mod_event_target_ruler = {
					death = {
						death_reason = death_murder
						killer = event_target:mod_event_target_orphan
					}
				}
				event_target:mod_event_target_orphan = {
					death = {
						death_reason = death_suicide
					}
				}

				#--------------------------------------------------------------#
				# 모두 사망했으므로 이후 이벤트 종료                           #
				#--------------------------------------------------------------#

				finish_adopting_orphan_abroad_event_effect = yes
			}

			#------------------------------------------------------------------#
			# 20% : 고아의 계획이 실패 : 군주 불구, 고아 자살                  #
			#------------------------------------------------------------------#

			20 = {
				event_target:mod_event_target_ruler = {
					add_trait = maimed
				}
				event_target:mod_event_target_orphan = {
					death = {
						death_reason = death_suicide
					}
				}

				#--------------------------------------------------------------#
				# 군주가 살아남았으므로, 그 군주 개인에 대해 처벌 명분을 얻을  #
				# 가능성이 생긴다. 후속 이벤트 - 복수                          #
				#--------------------------------------------------------------#

				event_target:mod_event_target_player = {
					character_event = {
						id = OPG.3331
						days = 1
					}
				}
			}

			#------------------------------------------------------------------#
			# 5% : 고아의 계획이 실패 : 군주 부상, 고아 처형                   #
			#------------------------------------------------------------------#

			5 = {
				event_target:mod_event_target_ruler = {
					add_trait = wounded
				}
				event_target:mod_event_target_orphan = {
					death = {
						death_reason = death_execution
						killer = event_target:mod_event_target_ruler
					}
				}

				#--------------------------------------------------------------#
				# 군주가 살아남았으므로, 그 군주 개인에 대해 처벌 명분을 얻을  #
				# 가능성이 생긴다. 후속 이벤트 - 복수                          #
				#--------------------------------------------------------------#

				event_target:mod_event_target_player = {
					character_event = {
						id = OPG.3331
						days = 1
					}
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 엔딩 5. 군주의 성적 학대를 당하고 있는 고아 (4) - 엇나감                     #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3151
	desc = {
		text = EVTDESC_OPG_3151_1
		trigger = {
			event_target:mod_event_target_ruler = {
				same_sex = event_target:mod_event_target_orphan
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3151_2
		trigger = {
			event_target:mod_event_target_ruler = {
				NOT = { same_sex = event_target:mod_event_target_orphan }
			}
		}
	}

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3151
		hidden_tooltip = {
			letter_event = {
				id = OPG.3152
			}		
		}
	}
}

letter_event = {

	id = OPG.3152
	desc = {
		text = EVTDESC_OPG_3152_1
		trigger = {
			event_target:mod_event_target_ruler = {
				same_sex = event_target:mod_event_target_orphan
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3152_2
		trigger = {
			event_target:mod_event_target_ruler = {
				NOT = { same_sex = event_target:mod_event_target_orphan }
			}
		}
	}

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3152

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 이 엔딩의 경우 16세 최종 엔딩이 없으므로, 플래그만 삭제한다.     #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_05
			#set_character_flag = mod_event_check_flag_ending_category_05

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}

			#------------------------------------------------------------------#
			# 성년 트레잇이지만 이벤트에 따라서 미리 붙여 둔다.                #
			#------------------------------------------------------------------#

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						same_sex = event_target:mod_event_target_orphan
					}
				}
				event_target:mod_event_target_orphan = {
					add_trait = homosexual
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						NOT = { same_sex = event_target:mod_event_target_orphan }
					}
				}
				event_target:mod_event_target_orphan = {
					remove_trait = chaste
					add_trait = lustful
				}
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 엔딩 6. 군주의 폭력적 학대를 당하고 있는 고아 (1)                            #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3161
	desc = EVTDESC_OPG_3161

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3161
		hidden_tooltip = {
			letter_event = {
				id = OPG.3162
			}		
		}
	}
}

letter_event = {

	id = OPG.3162
	desc = EVTDESC_OPG_3162

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3162

		#----------------------------------------------------------------------#
		# A. 할 수 있는 일이 없다. (이벤트 종료)                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_06
			set_character_flag = mod_event_check_flag_ending_category_06

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTB_OPG_3162
		trigger = {
			job_spymaster = {
				always = yes
			}
			any_courtier = {
				is_orphanage_nurse_trigger = yes
			}
		}

		#----------------------------------------------------------------------#
		# B. 보모와 첩보관을 파견하여 고아를 구출한다                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_06
			set_character_flag = mod_event_check_flag_ending_category_06

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		custom_tooltip = {
			text = CUSTOM_TOOLTIP_CALL_SPYMASTER_AND_ORPHANAGE_NURSE_TO_RESCUE_ORPHAN
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 현재 첩보관이 임무 수행중이었다면 그 임무를 취소한다.        #
				#--------------------------------------------------------------#

				if = {
					limit = {
						job_spymaster = {
							has_job_action = yes
						}
					}
					job_spymaster = {
						if = {
							limit = {
								has_job_action = action_uncover_plots 
							}
							cancel_job_action = action_uncover_plots
						}

						if = {
							limit = {
								has_job_action = action_study_technology 
							}
							cancel_job_action = action_study_technology
						}

						if = {
							limit = {
								has_job_action = action_organize_spies 
							}
							cancel_job_action = action_organize_spies
						}
					}
				}

				#--------------------------------------------------------------#
				# 현재 고아원 보모가 임무 수행중(종군중)이었다면 복귀시킨다.   #
				#--------------------------------------------------------------#

				if = {
					limit = {
						any_courtier = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
					}
					random_courtier = {
						limit = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
						clr_character_flag = mod_character_event_flag_mission_to_battlefield

						add_character_modifier = {
							name = mod_event_interval_notification_flag_modifier_mission_to_battlefield
							duration = 1825
						}
					}
				}

				#--------------------------------------------------------------#
				# 후속 이벤트 - 구출 로 이어진다                               #
				#--------------------------------------------------------------#

				event_target:mod_event_target_player = {
					character_event = {
						id = OPG.3321
						days = 5
					}
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 엔딩 7. 군주의 폭력적 학대를 당하고 있는 고아 (2) - 도주                     #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3171
	desc = EVTDESC_OPG_3171

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3171
		hidden_tooltip = {
			letter_event = {
				id = OPG.3172
			}		
		}
	}
}

letter_event = {

	id = OPG.3172
	desc = EVTDESC_OPG_3172

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3172

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 후속 이벤트에 필요한 플래그를 일단 붙여 둔다                     #
			# 이후 결론은 죽거나 돌아오거나이므로, 굳이 오피니언 모디파이어는  #
			# 따로 붙이지 않는다.                                              #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_07
			set_character_flag = mod_event_check_flag_ending_category_07
		}

		event_target:mod_event_target_ruler = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3173
				}
			}
		}
	}
}

character_event = {

	id = OPG.3173
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player 
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 영주의 선택 - 무슨 수를 쓰더라도 잡아서 내 앞에 데려와라!         #
		#    : 게임 시간 5일 후 후속 이벤트 (처형) 으로 이어짐                 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}
		event_target:mod_event_target_player = {

			set_character_flag = mod_event_temporary_flag_letter_for_ending_7

			character_event = {
				id = OPG.3301
				days = 5
			}
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 영주의 선택 - 꼬마 하나 도망간 건 신경쓸 것 없다. 대충 찾아보라.  #
		#    : 게임 시간 14일 후 후속 이벤트 (편지) 으로 이어짐                #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3311
				days = 14
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 엔딩 8. 군주의 폭력적 학대를 당하고 있는 고아 (3) - 살해 시도 후 도주        #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3181
	desc = EVTDESC_OPG_3181

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3181
		hidden_tooltip = {
			letter_event = {
				id = OPG.3182
			}		
		}
	}
}

letter_event = {

	id = OPG.3182
	desc = EVTDESC_OPG_3182

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3182

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 후속 이벤트에 필요한 플래그를 일단 붙여 둔다                     #
			# 이후 결론은 죽거나 돌아오거나이므로, 굳이 오피니언 모디파이어는  #
			# 따로 붙이지 않는다.                                              #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_08
			set_character_flag = mod_event_check_flag_ending_category_08
		}

		random_list = {

			#------------------------------------------------------------------#
			# 65% : 고아의 계획이 성공 : 군주 사망, 고아 도주                  #
			#------------------------------------------------------------------#

			65 = {
				event_target:mod_event_target_ruler = {
					current_heir = {
						save_event_target_as = mod_event_target_ruler_successor
					}
					death = {
						death_reason = death_murder
						killer = event_target:mod_event_target_orphan
					}
				}

				#--------------------------------------------------------------#
				# 원래 군주가 사망했으므로 그 계승자를 새 군주로 설정한다.     #
				#--------------------------------------------------------------#

				event_target:mod_event_target_ruler_successor = {
					save_event_target_as = mod_event_target_ruler
				}

				clear_event_target = mod_event_target_ruler_successor

				event_target:mod_event_target_player = {
					set_character_flag = mod_event_temporary_flag_letter_for_ending_8_2
				}
			}

			#------------------------------------------------------------------#
			# 25% : 고아의 계획이 실패 : 군주 불구, 고아 도주                  #
			#------------------------------------------------------------------#

			25 = {
				event_target:mod_event_target_ruler = {
					add_trait = maimed
				}

				event_target:mod_event_target_player = {
					set_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
				}
			}

			#------------------------------------------------------------------#
			# 10% : 고아의 계획이 실패 : 군주 부상, 고아 도주                  #
			#------------------------------------------------------------------#

			10 = {
				event_target:mod_event_target_ruler = {
					add_trait = wounded
				}

				event_target:mod_event_target_player = {
					set_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
				}
			}
		}

		event_target:mod_event_target_ruler = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3183
				}
			}
		}
	}
}

character_event = {

	id = OPG.3183
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player 
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 영주의 선택 - 무슨 수를 쓰더라도 잡아서 내 앞에 데려와라!         #
		#    : 게임 시간 5일 후 후속 이벤트 (처형) 으로 이어짐                 #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 65
		}
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3301
				days = 5
			}
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 영주의 선택 - 꼬마 하나 도망간 건 신경쓸 것 없다. 대충 찾아보라.  #
		#    : 게임 시간 14일 후 후속 이벤트 (편지) 으로 이어짐                #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 35
		}
		event_target:mod_event_target_player = {
			
			clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
			clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

			character_event = {
				id = OPG.3311
				days = 14
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 엔딩 9. 군주의 정식 자녀로 입양                                              #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3191
	desc = EVTDESC_OPG_3191

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3191

		custom_tooltip = {
			text = CUSTOM_TOOLTIP_ADOPT_ORPHAN_TO_DYNASTY
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 고아의 가문을 군주의 가문과 같게 설정                        #
				#--------------------------------------------------------------#

				event_target:mod_event_target_orphan = {
					dynasty = event_target:mod_event_target_ruler
				}

				#--------------------------------------------------------------#
				# 군주와 그 배우자를 정식으로 부모로 설정                      #
				#--------------------------------------------------------------#

				if = {
					limit = {
						event_target:mod_event_target_ruler = {
							is_female = no
						}
					}
					event_target:mod_event_target_orphan = {
						set_father = event_target:mod_event_target_ruler
					}

					if = {
						limit = {
							event_target:mod_event_target_ruler = {
								spouse = {
									always = yes
								}
							}
						}
						event_target:mod_event_target_ruler = {
							spouse = {
								event_target:mod_event_target_orphan = {
									set_mother = PREV
								}								
							}
						}
					}
				}

				if = {
					limit = {
						event_target:mod_event_target_ruler = {
							is_female = yes
						}
					}
					event_target:mod_event_target_orphan = {
						set_mother = event_target:mod_event_target_ruler
					}

					if = {
						limit = {
							event_target:mod_event_target_ruler = {
								spouse = {
									always = yes
								}
							}
						}
						event_target:mod_event_target_ruler = {
							spouse = {
								event_target:mod_event_target_orphan = {
									set_father = PREV
								}								
							}
						}
					}
				}

				#--------------------------------------------------------------#
				# 인도 종교 계열의 경우, 입양되는 경우 입양 군주의 트레잇에 따 #
				# 라서 브라만이나 크샤트리아 트레잇을 달아준다.                #
				#--------------------------------------------------------------#

				event_target:mod_event_target_orphan = {
					religion = event_target:mod_event_target_ruler
				}

				if = {
					limit = {
						event_target:mod_event_target_ruler = {
							religion_group = indian_group
							trait = brahmin
						}
					}
					event_target:mod_event_target_orphan = {
						add_trait = brahmin
					}
				}

				if = {
					limit = {
						event_target:mod_event_target_ruler = {
							religion_group = indian_group
							trait = kshatriya
						}
					}
					event_target:mod_event_target_orphan = {
						add_trait = kshatriya
					}
				}
			}
		}

		hidden_tooltip = {
			letter_event = {
				id = OPG.3192
			}		
		}
	}
}

letter_event = {

	id = OPG.3192
	desc = EVTDESC_OPG_3192

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3192

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_09
			set_character_flag = mod_event_check_flag_ending_category_09

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 10. 고아의 종교와 군주의 종교가 다름 (1) - 무관심 또는 관용             #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3201
	desc = EVTDESC_OPG_3201

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3201
		hidden_tooltip = {
			letter_event = {
				id = OPG.3202
			}		
		}
	}
}

letter_event = {

	id = OPG.3202
	desc = EVTDESC_OPG_3202

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3202

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_10
			set_character_flag = mod_event_check_flag_ending_category_10

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 11. 고아의 종교와 군주의 종교가 다름 (2) - 군주가 고아의 종교로 개종    #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3211
	desc = EVTDESC_OPG_3211

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {

		#------------------------------------------------------------------#
		# 편지의 맥락에 맞춰서, 군주의 궁중 사제의 종교를 변경한다.        #
		#------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			job_spiritual = {
				religion = event_target:mod_event_target_orphan
			}
		}
	}

	option = {
		name = EVTOPTA_OPG_3211
		hidden_tooltip = {
			letter_event = {
				id = OPG.3212
			}		
		}
	}
}

letter_event = {

	id = OPG.3212
	desc = EVTDESC_OPG_3212

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	immediate = {

		#----------------------------------------------------------------------#
		# Conclave DLC 를 사용하지 않는 경우, Guardian 이 설정된 경우 Guardian #
		# 의 종교도 바꿔준다.                                                  #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				NOT = { has_dlc = "Zeus" }
			}
			event_target:mod_event_target_orphan = {
				guardian = {
					religion = event_target:mod_event_target_orphan
				}
			}
		}

		if = {
			limit = {
				has_dlc = "Zeus"
			}
			event_target:mod_event_target_orphan = {
				educator = {
					religion = event_target:mod_event_target_orphan
				}
			}
		}

		#----------------------------------------------------------------------#
		# 군주의 종교를 개종한다.                                              #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			religion = event_target:mod_event_target_orphan
		}
	}

	option = {
		name = EVTOPTA_OPG_3212

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_11
			set_character_flag = mod_event_check_flag_ending_category_11

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				character_event = {
					id = OPG.3213
				}
			}		
		}
	}
}

character_event = {

	id = OPG.3213
	hide_window = yes

	# mod_event_target_ruler (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3214
				days = 3
			}
		}
	}
}

character_event = {

	id = OPG.3214
	desc = EVTDESC_OPG_3214
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes

	# mod_event_target_ruler (FROM)
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3214
		hidden_tooltip = {
			event_target:mod_event_target_player = {
				letter_event = {
					id = OPG.3215
				}
			}
		}
	}
}

letter_event = {

	id = OPG.3215
	desc = EVTDESC_OPG_3215

	# mod_event_target_ruler (FROMFROM)
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3215

		#----------------------------------------------------------------------#
		# 개종한 종교의 종교 권위를 20년간 상승시킨다.                         #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			religion_authority = {
				modifier = mod_rm_converted_ruler_by_orphan
				years = 20
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 12. 고아의 종교와 군주의 종교가 다름 (3) - 고아가 군주의 종교로 개종    #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3221
	desc = EVTDESC_OPG_3221

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3221
		hidden_tooltip = {
			letter_event = {
				id = OPG.3222
			}		
		}
	}
}

letter_event = {

	id = OPG.3222
	desc = EVTDESC_OPG_3222

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3222

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 고아의 종교를 변경한다.                                          #
			#------------------------------------------------------------------#

			religion = event_target:mod_event_target_ruler

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_12
			set_character_flag = mod_event_check_flag_ending_category_12

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 13. 고아의 종교와 군주의 종교가 다름 (4) - 종교 갈등 (3231~3232)        #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3231
	desc = EVTDESC_OPG_3231

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3231
		hidden_tooltip = {
			letter_event = {
				id = OPG.3232
			}		
		}
	}
}

letter_event = {

	id = OPG.3232
	desc = EVTDESC_OPG_3232

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3232

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 고아의 종교를 변경한다.                                          #
			#------------------------------------------------------------------#

			religion = event_target:mod_event_target_ruler

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_13
			set_character_flag = mod_event_check_flag_ending_category_13

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 14. 고아의 종교와 군주의 종교가 다름 (5) - 이단 (후속 이벤트 있음)      #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3241
	desc = EVTDESC_OPG_3241

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_orphan = {
			imprison = event_target:mod_event_target_ruler
		}
	}

	option = {
		name = EVTOPTA_OPG_3241
		hidden_tooltip = {
			letter_event = {
				id = OPG.3242
			}		
		}
	}
}

letter_event = {

	id = OPG.3242
	desc = EVTDESC_OPG_3242

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3242

		#----------------------------------------------------------------------#
		# A. 할 수 있는 일이 없다.                                             #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			imprison = event_target:mod_event_target_ruler

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_14
			set_character_flag = mod_event_check_flag_ending_category_14

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 선택에 의해 결말이 결정된다.                                  #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			character_event = {
				id = OPG.3243
				days = 7
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3242
		trigger = {
			job_spymaster = {
				always = yes
			}
			any_courtier = {
				is_orphanage_nurse_trigger = yes
			}
		}

		#----------------------------------------------------------------------#
		# B. 보모와 첩보관을 파견하여 고아를 구출한다                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_14
			set_character_flag = mod_event_check_flag_ending_category_14

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		custom_tooltip = {
			text = CUSTOM_TOOLTIP_CALL_SPYMASTER_AND_ORPHANAGE_NURSE_TO_RESCUE_ORPHAN
			hidden_tooltip = {

				#--------------------------------------------------------------#
				# 현재 첩보관이 임무 수행중이었다면 그 임무를 취소한다.        #
				#--------------------------------------------------------------#

				if = {
					limit = {
						job_spymaster = {
							has_job_action = yes
						}
					}
					job_spymaster = {
						if = {
							limit = {
								has_job_action = action_uncover_plots 
							}
							cancel_job_action = action_uncover_plots
						}

						if = {
							limit = {
								has_job_action = action_study_technology 
							}
							cancel_job_action = action_study_technology
						}

						if = {
							limit = {
								has_job_action = action_organize_spies 
							}
							cancel_job_action = action_organize_spies
						}
					}
				}

				#--------------------------------------------------------------#
				# 현재 고아원 보모가 임무 수행중(종군중)이었다면 복귀시킨다.   #
				#--------------------------------------------------------------#

				if = {
					limit = {
						any_courtier = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
					}
					random_courtier = {
						limit = {
							is_orphanage_nurse_trigger = yes
							has_character_flag = mod_character_event_flag_mission_to_battlefield
						}
						clr_character_flag = mod_character_event_flag_mission_to_battlefield

						add_character_modifier = {
							name = mod_event_interval_notification_flag_modifier_mission_to_battlefield
							duration = 1825
						}
					}
				}

				#--------------------------------------------------------------#
				# 후속 이벤트 - 구출 로 이어진다                               #
				#--------------------------------------------------------------#

				event_target:mod_event_target_player = {
					character_event = {
						id = OPG.3321
						days = 5
					}
				}
			}
		}
	}
}


character_event = {

	id = OPG.3243
	desc = EVTDESC_HIDDEN_EVENT
	picture = GFX_evt_nemo_blank

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# A. 개종하지 않는다 - 사망                                            #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3244
			}
		}
	}
	option = {
		name = EVTOPTB_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# B. 개종한다 - 석방                                                   #
		#----------------------------------------------------------------------#

		ai_chance = {
			factor = 50
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3245
			}
		}
	}
}

character_event = {

	id = OPG.3244
	desc = EVTDESC_OPG_3244
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3244
		
		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 고아는 처형당한다                                                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTB_OPG_3244

		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 고아는 처형당한다                                                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 자문회를 소집한다 - 연속 이벤트: 납치                                #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			character_event = {
				id = OPG.3361
				days = 5
			}
		}
	}
}

character_event = {

	id = OPG.3245
	desc = EVTDESC_OPG_3245
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3244
		
		#----------------------------------------------------------------------#
		# 고아는 개종하고 석방된다                                             #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			religion = event_target:mod_event_target_ruler
			prisoner = no
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 엔딩 15. 개과천선한 고아 (3251~3252)                                         #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3251
	desc = EVTDESC_OPG_3251

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3251
		hidden_tooltip = {
			letter_event = {
				id = OPG.3252
			}		
		}
	}
}

letter_event = {

	id = OPG.3252
	desc = EVTDESC_OPG_3252

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3252

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 고아의 트레잇이 교정됨                                           #
			#------------------------------------------------------------------#

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = chaste
					}
					event_target:mod_event_target_orphan = {
						trait = lustful
					}
				}
				remove_trait = lustful

				if = {
					limit = {
						NOT = { religion_group = muslim }
					}
					add_trait = chaste
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = temperate
					}
					event_target:mod_event_target_orphan = {
						trait = gluttonous
					}
				}
				remove_trait = gluttonous
				add_trait = temperate
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = charitable
					}
					event_target:mod_event_target_orphan = {
						trait = greedy
					}
				}
				remove_trait = greedy
				add_trait = charitable
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = diligent
					}
					event_target:mod_event_target_orphan = {
						trait = slothful
					}
				}
				remove_trait = slothful
				add_trait = diligent
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = patient
					}
					event_target:mod_event_target_orphan = {
						trait = wroth
					}
				}
				remove_trait = wroth
				add_trait = patient
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = kind
					}
					event_target:mod_event_target_orphan = {
						OR = {
							trait = envious
							trait = cruel
						}
					}
				}
				if = {
					limit = {
						trait = envious
					}
					remove_trait = envious
				}
				if = {
					limit = {
						trait = cruel
					}
					remove_trait = cruel
				}
				add_trait = kind
			}

			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						trait = humble
					}
					event_target:mod_event_target_orphan = {
						trait = proud
					}
				}
				remove_trait = proud
				add_trait = humble
			}

			if = {
				limit = {
					has_dlc = "Zeus"
					event_target:mod_event_target_orphan = {
						trait = haughty
					}
				}
				remove_trait = haughty
				add_trait = affectionate
			}

			if = {
				limit = {
					has_dlc = "Zeus"
					event_target:mod_event_target_orphan = {
						trait = indolent
					}
				}
				remove_trait = indolent
				add_trait = conscientious
			}

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_15
			set_character_flag = mod_event_check_flag_ending_category_15

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 16. 말썽꾸러기 고아 (3261~3262)                                         #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3261
	desc = EVTDESC_OPG_3261

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3261
		hidden_tooltip = {
			letter_event = {
				id = OPG.3262
			}		
		}
	}
}

letter_event = {

	id = OPG.3262
	desc = EVTDESC_OPG_3262

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3262

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_16
			set_character_flag = mod_event_check_flag_ending_category_16

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 엔딩 21. 성직자의 길 (3271~3272)                                             #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3271
	desc = EVTDESC_OPG_3271

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3271
		hidden_tooltip = {
			letter_event = {
				id = OPG.3272
			}		
		}
	}
}

letter_event = {

	id = OPG.3272
	desc = EVTDESC_OPG_3272

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3272

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_21
			set_character_flag = mod_event_check_flag_ending_category_21

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 여기는 100% 요청파송이므로 바로 쿨타임 모디파이어를 해제해 준다.     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_monk
			}

			ROOT = {
				remove_character_modifier = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
			}
			clr_character_flag = mod_event_check_flag_orphan_for_monk
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 엔딩 22. 시동-동성 (3273~3274)                                               #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3273
	desc = EVTDESC_OPG_3273

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_orphan = {
			religion = event_target:mod_event_target_ruler
			culture = event_target:mod_event_target_ruler
		}
	}

	option = {
		name = EVTOPTA_OPG_3273
		hidden_tooltip = {
			letter_event = {
				id = OPG.3274
			}		
		}
	}
}

letter_event = {

	id = OPG.3274
	desc = EVTDESC_OPG_3274

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3274

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			# 시동의 경우 노멀 엔딩인 01 을 붙인다.                            #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_22
			set_character_flag = mod_event_check_flag_ending_category_01

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 여기는 100% 요청파송이므로 바로 쿨타임 모디파이어를 해제해 준다.     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_companion
			}

			ROOT = {
				remove_character_modifier = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
			}
			clr_character_flag = mod_event_check_flag_orphan_for_companion
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 엔딩 23. 시동-이성 (3275~3276)                                               #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3275
	desc = EVTDESC_OPG_3275

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_orphan = {
			religion = event_target:mod_event_target_ruler
			culture = event_target:mod_event_target_ruler
		}
	}

	option = {
		name = EVTOPTA_OPG_3275
		hidden_tooltip = {
			letter_event = {
				id = OPG.3276
			}		
		}
	}
}

letter_event = {

	id = OPG.3276
	desc = EVTDESC_OPG_3276

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3276

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			# 시동의 경우 노멀 엔딩인 01 을 붙인다.                            #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_23
			set_character_flag = mod_event_check_flag_ending_category_01

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 여기는 100% 요청파송이므로 바로 쿨타임 모디파이어를 해제해 준다.     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_companion
			}
			
			ROOT = {
				remove_character_modifier = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
			}
			clr_character_flag = mod_event_check_flag_orphan_for_companion
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 엔딩 24. 예비 첩 (3277~3278)                                                 #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3277
	desc = EVTDESC_OPG_3277

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_orphan = {
			religion = event_target:mod_event_target_ruler
			culture = event_target:mod_event_target_ruler
		}
	}

	option = {
		name = EVTOPTA_OPG_3277
		hidden_tooltip = {
			letter_event = {
				id = OPG.3278
			}		
		}
	}
}

letter_event = {

	id = OPG.3278
	desc = EVTDESC_OPG_3278

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3278

		event_target:mod_event_target_orphan = {

			#------------------------------------------------------------------#
			# 16세 최종 엔딩을 위한 플래그를 붙여 둔다.                        #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_orphan_ending_flag_24
			set_character_flag = mod_event_check_flag_ending_category_24

			#------------------------------------------------------------------#
			# 플레이어와 오피니언 모디파이어로 연결해 둔다.                    #
			#------------------------------------------------------------------#

			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}
		}

		#----------------------------------------------------------------------#
		# 여기는 100% 요청파송이므로 바로 쿨타임 모디파이어를 해제해 준다.     #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_orphan_for_concubine
			}
			
			ROOT = {
				remove_character_modifier = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
			}
			clr_character_flag = mod_event_check_flag_orphan_for_concubine
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


#------------------------------------------------------------------------------#
# 연속 이벤트 : 처형                                                           #
# 각 도주 엔딩의 진행 과정에서 고아가 붙잡힌 경우 이 이벤트가 발생한다.        #
# (엔딩 3, 엔딩 7, 엔딩 8)                                                     #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3301
	desc = EVTDESC_OPG_3301
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3301
		
		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 고아는 처형당한다                                                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTB_OPG_3301
		trigger = {
			event_target:mod_event_target_ruler = {
				liege = {
					always = yes
				}
			}
		}

		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 고아는 처형당한다                                                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 그 주군에게 봉신의 죄를 고발하는 편지를 보낸다. - 연속 이벤트: 고발  #
		#----------------------------------------------------------------------#
		
		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				liege = {
					letter_event = {
						id = OPG.3341
					}
				}
			}
		}
	}

	option = {
		name = EVTOPTC_OPG_3301

		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 고아는 처형당한다                                                    #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 자문회를 소집한다 - 연속 이벤트: 납치                                #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			character_event = {
				id = OPG.3361
				days = 5
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 처벌 전쟁에 승리                                                             #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3302
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3303
					days = 1
				}
			}
		}
	}
}

character_event = {

	id = OPG.3303
	desc = EVTDESC_OPG_3303
	picture = GFX_evt_nemo_event_punishment_war_is_ended

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3303

		#----------------------------------------------------------------------#
		# A. 전쟁배상금으로 충분하다. 그만 이 자를 돌려보내라.                 #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				FROM = {
					prisoner = yes
				}
			}
			prisoner = no
		}
	}

	option = {
		name = EVTOPTB_OPG_3303

		#----------------------------------------------------------------------#
		# B. 응당한 처벌을 해야 한다. 이 자를 감옥으로 끌고 가라.              #
		#----------------------------------------------------------------------#

		FROM = {
			save_event_target_as = mod_event_target_prisoner
		}
		ROOT = {
			save_event_target_as = mod_event_target_player
		}

		if = {
			limit = {
				event_target:mod_event_target_prisoner = {
					prisoner = no
				}
			}
			event_target:mod_event_target_prisoner = {
				imprison = ROOT
			}
		}

		event_target:mod_event_target_prisoner = {
			character_event = {
				id = OPG.3351
			}
		}
	}
}




#------------------------------------------------------------------------------#
# 연속 이벤트 : 편지                                                           #
# 각 도주 엔딩의 진행 과정에서 고아가 붙잡히지 않은 경우 이 이벤트가 발생한다. #
# (엔딩 3, 엔딩 7, 엔딩 8)                                                     #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3311
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_orphan = {
			character_event = {
				id = OPG.3312
			}
		}
	}
}

character_event = {

	id = OPG.3312
	hide_window = yes

	is_triggered_only = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan (ROOT)
	# mod_event_target_orphanage_nurse

	immediate = {
		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3313
			}
		}
	}
}

letter_event = {

	id = OPG.3313
	desc = EVTDESC_OPG_3313

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3313

		#----------------------------------------------------------------------#
		# A. 고아를 성으로 데려온다.                                           #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						is_alive = yes
					}
				}
				random = {
					chance = 75
					opinion = {
						who = ROOT
						modifier = opinion_mod_char_asylum
					}
				}
			}
		}

		event_target:mod_event_target_orphan = {

			move_character = ROOT
			remove_guardian = yes

			add_trait = strong

			set_character_flag = mod_character_event_flag_orphan_jump_ones_fate
			set_character_flag = mod_character_event_flag_orphan_meet_my_benefactor
			set_character_flag = mod_character_event_flag_experienced_abusing_event

			clr_character_flag = mod_event_check_flag_ending_category_03
			clr_character_flag = mod_event_check_flag_ending_category_07
			clr_character_flag = mod_event_check_flag_ending_category_08
		}
		ROOT = {
			if = {
				limit = {
					trait = cruel
				}
				remove_trait = cruel
			}
			if = {
				limit = {
					NOT = { trait = kind }
				}
				add_trait = kind
			}

			hidden_tooltip = {
				character_event = {
					id = OPG.3314
				}
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3313

		#----------------------------------------------------------------------#
		# B. 고아를 데려오지 않는다.                                           #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					event_target:mod_event_target_ruler = {
						is_alive = yes
					}
				}
				opinion = {
					who = ROOT
					modifier = opinion_mod_char_execute_escape_orphan
				}
			}
		}

		ROOT = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}

			hidden_tooltip = {
				character_event = {
					id = OPG.3315
				}
			}
		}
	}
}

character_event = {

	id = OPG.3314
	desc = EVTDESC_OPG_3314
	picture = GFX_evt_recovery

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = EVTOPTA_OPG_3314

		#----------------------------------------------------------------------#
		# 고아를 다시 데려왔으므로, 고아와 관련된 모디파이어를 다시 생성한다.  #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_rescued_orphan
			}
			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}

			add_trait = rescued_orphan_by_player
			set_orphan_character_relative_opinion_modifier_effect = yes
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

character_event = {

	id = OPG.3315
	desc = EVTDESC_OPG_3315
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROMFROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_OPG_3315

		#----------------------------------------------------------------------#
		# 고아가 플레이어가 보낸 병사들에 의해 사망한다.                       #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_murder
				killer = ROOT
			}
		}
		ROOT = {
			piety = -15
			add_trait = depressed
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}



#------------------------------------------------------------------------------#
# 연속 이벤트 : 구출                                                           #
# 고아가 학대 또는 투옥되는 이벤트에서 고아를 구출하는 선택지를 선택한 경우    #
# (엔딩 2, 엔딩 6, 엔딩 14)                                                    #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3321
	desc = EVTDESC_OPG_3321
	picture = GFX_evt_nemo_common_discuss

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3321

		trigger = {
			wealth = 26
		}

		#----------------------------------------------------------------------#
		# 고아원 보모와 첩보관이 긴급히 임무수행을 위해 떠난다.                #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			location = {
				ROOT = {
					job_spymaster = {
						save_event_target_as = mod_event_target_spymaster
						set_job_action = {
							action = action_organize_spies
							where = PREVPREV
						}
					}
					random_courtier = {
						limit = {
							is_orphanage_nurse_trigger = yes
						}
						save_event_target_as = mod_event_target_orphanage_nurse
						set_character_flag = mod_character_event_flag_mission_to_rescue_orphan
					}
				}
			}
		}

		#----------------------------------------------------------------------#
		# 다음 이벤트                                                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			character_event = {
				id = OPG.3322
				days = 14
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3321

		trigger = {
			wealth = 26
		}

		#----------------------------------------------------------------------#
		# 엔딩 14 의 경우, 포기하더라도 마무리 이벤트가 발생해야 한다.         #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					has_character_flag = mod_event_check_flag_ending_category_14
				}
			}
			event_target:mod_event_target_orphan = {
				character_event = {
					id = OPG.3243
					days = 7
				}
			}

			break = yes
		}

		#----------------------------------------------------------------------#
		# 그 외의 경우 여기에서 이벤트를 종료하면 된다.                        #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTC_OPG_3321

		trigger = {
			NOT = { wealth = 26 }
		}

		#----------------------------------------------------------------------#
		# 엔딩 14 의 경우, 포기하더라도 마무리 이벤트가 발생해야 한다.         #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					has_character_flag = mod_event_check_flag_ending_category_14
				}
			}
			event_target:mod_event_target_orphan = {
				character_event = {
					id = OPG.3243
					days = 7
				}
			}

			break = yes
		}

		#----------------------------------------------------------------------#
		# 그 외의 경우 여기에서 이벤트를 종료하면 된다.                        #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}


character_event = {

	id = OPG.3322
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3323
			}
		}
	}
}

letter_event = {

	id = OPG.3323
	desc = {
		text = EVTDESC_OPG_3323_IP
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = yes
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3323_NP
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = no
			}
		}
	}

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3323
		trigger = {
			wealth = 10
		}
		ROOT = {
			wealth = -10
		}

		#----------------------------------------------------------------------#
		# 작전을 수행한다.                                                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3324
				}
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3323

		#----------------------------------------------------------------------#
		# 고아원 보모와 첩보관은 임무로부터 철수한다.                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		ROOT = {
			random_courtier = {
				limit = {
					is_orphanage_nurse_trigger = yes
				}
				clr_character_flag = mod_character_event_flag_mission_to_rescue_orphan
			}
		}
		clear_event_target = mod_event_target_spymaster
		
		#----------------------------------------------------------------------#
		# 엔딩 14 의 경우, 포기하더라도 마무리 이벤트가 발생해야 한다.         #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					has_character_flag = mod_event_check_flag_ending_category_14
				}
			}
			event_target:mod_event_target_orphan = {
				character_event = {
					id = OPG.3243
					days = 7
				}
			}

			break = yes
		}

		#----------------------------------------------------------------------#
		# 그 외의 경우 여기에서 이벤트를 종료하면 된다.                        #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

character_event = {

	id = OPG.3324
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)

	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				NOT = { intrigue = 10 }
			}

			random_list = {
				50 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				50 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 10
				NOT = { intrigue = 15 }
			}

			random_list = {
				75 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				25 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 15
				NOT = { intrigue = 20 }
			}

			random_list = {
				90 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				10 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 20
			}

			set_character_flag = mod_event_temporary_flag_mission_is_succeed
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3325
			}
		}
	}
}

character_event = {

	id = OPG.3325
	desc = {
		text = EVTDESC_OPG_3325_IP_SUCCEED
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = yes
			}
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3325_NP_SUCCEED
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = no
			}
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3325_IP_FAILED
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = yes
			}
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3325_NP_FAILED
		trigger = {
			event_target:mod_event_target_orphan = {
				prisoner = no
			}
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}
	}
	picture = GFX_evt_nemo_raining_street_in_midnight

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3325
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		#----------------------------------------------------------------------#
		# 고아가 돌아온다                                                      #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					has_character_flag = mod_event_check_flag_ending_category_14
				}
			}
			event_target:mod_event_target_orphan = {
				prisoner = no
			}
		}

		event_target:mod_event_target_orphan = {
			move_character = ROOT
			remove_guardian = yes
		}

		#----------------------------------------------------------------------#
		# 고아원 보모와 첩보관의 능력치 보너스                                 #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			change_intrigue = 2
		}
		event_target:mod_event_target_orphanage_nurse = {
			change_intrigue = 2
		}

		#----------------------------------------------------------------------#
		# 고아원 보모와 첩보관은 임무로부터 철수한다.                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		event_target:mod_event_target_orphanage_nurse = {
			clr_character_flag = mod_character_event_flag_mission_to_rescue_orphan
		}
		clear_event_target = mod_event_target_spymaster

		#----------------------------------------------------------------------#
		# 고아의 스코프로 마무리 이벤트를 실행한다.                            #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			character_event = {
				id = OPG.3326
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3325
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}

		#----------------------------------------------------------------------#
		# 해당 군주에게는 Cruel 트레잇을 붙인다.                               #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			if = {
				limit = {
					trait = kind
				}
				remove_trait = kind
			}
			if = {
				limit = {
					NOT = { trait = cruel }
				}
				add_trait = cruel
			}
		}

		#----------------------------------------------------------------------#
		# 전원이 처형당한다.                                                   #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		event_target:mod_event_target_spymaster = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		event_target:mod_event_target_orphanage_nurse = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		#----------------------------------------------------------------------#
		# 상대방 군주에 대해서 전쟁 명분이 발생                                #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			add_character_modifier = {
				name = mod_cm_dishonor_ruler_killed_orphan
				duration = 2555
				hidden = no
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_spymaster
		finish_adopting_orphan_abroad_event_effect = yes
	}
}


character_event = {

	id = OPG.3326
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3327
			}
		}
	}
}

character_event = {

	id = OPG.3327
	desc = EVTDESC_OPG_3327
	picture = GFX_evt_recovery

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan (FROM)
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3327

		#----------------------------------------------------------------------#
		# 고아를 다시 데려왔으므로, 고아와 관련된 모디파이어를 다시 생성한다.  #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_orphan = {
			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_rescued_orphan
			}
			opinion = {
				who = ROOT
				modifier = opinion_mod_cm_eternal_benefactor
			}

			add_trait = rescued_orphan_by_player
			set_orphan_character_relative_opinion_modifier_effect = yes

			if = {
				limit = {
					event_target:mod_event_target_orphan = {
						has_character_flag = mod_event_check_flag_ending_category_14
					}
				}
				if = {
					limit = {
						has_dlc = "Zeus"
					}
					event_target:mod_event_target_orphan = {
						add_trait = willful
					}
				}
				if = {
					limit = {
						NOT = { has_dlc = "Zeus" }
					}
					event_target:mod_event_target_orphan = {
						add_trait = zealous
					}
				}
			}

			set_character_flag = mod_character_event_flag_orphan_jump_ones_fate
			set_character_flag = mod_character_event_flag_orphan_meet_my_benefactor
			set_character_flag = mod_character_event_flag_experienced_abusing_event

			clr_character_flag = mod_event_check_flag_ending_category_02
			clr_character_flag = mod_event_check_flag_ending_category_06
			clr_character_flag = mod_event_check_flag_ending_category_14
		}
		ROOT = {
			if = {
				limit = {
					trait = cruel
				}
				remove_trait = cruel
			}
			if = {
				limit = {
					NOT = { trait = kind }
				}
				add_trait = kind
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

#------------------------------------------------------------------------------#
# 연속 이벤트 : 복수                                                           #
# 각 도주 이외의 사망 엔딩에 대해서 처벌 전쟁 명분을 부여한다.                 #
# (엔딩 4)                                                                     #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3331
	desc = EVTDESC_OPG_3331
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# A. 아니, 슬프지만.. 할 수 있는 일이 아무 것도 없다.                      #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_OPG_3331
		
		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	#--------------------------------------------------------------------------#
	# B. 이 자의 주군에게 이 자에 대한 처벌을 요구하겠다.                      #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTB_OPG_3331
		trigger = {
			event_target:mod_event_target_ruler = {
				liege = {
					always = yes
				}
			}
		}

		#----------------------------------------------------------------------#
		# 그 주군에게 봉신의 죄를 고발하는 편지를 보낸다. - 연속 이벤트: 고발  #
		#----------------------------------------------------------------------#
		
		hidden_tooltip = {

			set_character_flag = mod_event_temporary_flag_letter_for_ending_4

			event_target:mod_event_target_ruler = {
				liege = {
					letter_event = {
						id = OPG.3341
					}
				}
			}
		}
	}

	#--------------------------------------------------------------------------#
	# C. 가만히 있을 수 없다. 무도한 이 자를 직접 응징하겠다.                  #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTC_OPG_3331

		#----------------------------------------------------------------------#
		# 자문회를 소집한다 - 연속 이벤트: 납치                                #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			character_event = {
				id = OPG.3361
				days = 5
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 연속 이벤트 : 고발                                                           #
# 고아가 사망한 경우에 그 주군이 있는 경우, 그 주군에게 죄를 고발한다.         #
# (엔딩 3, 엔딩 4, 엔딩 7, 엔딩 8 / 3301,3331 에서 선택에 의해 여기로 분기)    #
#------------------------------------------------------------------------------#

letter_event = {

	id = OPG.3341
	desc = EVTDESC_HIDDEN_EVENT

	# mod_event_target_ruler - liege (ROOT)
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	#--------------------------------------------------------------------------#
	# 엔딩 3,7과 엔딩 4,8은 고아가 주군에 대한 살해 시도를 했다는 점에서 서로  #
	# 상황이 다르므로, 이를 구분하여 들어가야 한다.                            #
	#--------------------------------------------------------------------------#

	is_triggered_only = yes

	option = {

		#----------------------------------------------------------------------#
		# 엔딩 3,4,7,8 공통 : 고발이 묵살됨                                    #
		#----------------------------------------------------------------------#

		name = EVTOPTA_HIDDEN_EVENT
		trigger = {
			event_target:mod_event_target_player = {
				OR = {
					has_character_flag = mod_event_temporary_flag_letter_for_ending_3
					has_character_flag = mod_event_temporary_flag_letter_for_ending_4
					has_character_flag = mod_event_temporary_flag_letter_for_ending_7
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_2
				}
			}
		}
		ai_chance = {
			factor = 15
			modifier = {
				factor = 0.5
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = 0 } }
			}
			modifier = {
				factor = 1.5
				opinion = {	who = event_target:mod_event_target_ruler value = 30 }
			}
			modifier = {
				factor = 2.0
				opinion = {	who = event_target:mod_event_target_ruler value = 50 }
			}
			modifier = {
				factor = 2.0
				event_target:mod_event_target_ruler = { dynasty = ROOT }
			}
		}

		character_event = {
			id = OPG.3342
			days = 7
		}
	}

	option = {

		#----------------------------------------------------------------------#
		# 엔딩 3,7 : 답장이 돌아옴 (처벌할 수 없음)                            #
		#----------------------------------------------------------------------#

		name = EVTOPTB_HIDDEN_EVENT
		trigger = {
			event_target:mod_event_target_player = {
				OR = {
					has_character_flag = mod_event_temporary_flag_letter_for_ending_3
					has_character_flag = mod_event_temporary_flag_letter_for_ending_7
				}
			}
		}
		ai_chance = {
			factor = 45
			modifier = {
				factor = 0.5
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = 0 } }
			}
			modifier = {
				factor = 1.3
				opinion = {	who = event_target:mod_event_target_ruler value = 30 }
			}
			modifier = {
				factor = 1.6
				opinion = {	who = event_target:mod_event_target_ruler value = 50 }
			}
			modifier = {
				factor = 1.6
				event_target:mod_event_target_ruler = { dynasty = ROOT }
			}
		}

		character_event = {
			id = OPG.3343
			days = 7
		}
	}

	option = {

		#----------------------------------------------------------------------#
		# 엔딩 4,8 : 답장이 돌아옴 (처벌할 수 없음)                            #
		#----------------------------------------------------------------------#

		name = EVTOPTC_HIDDEN_EVENT
		trigger = {
			event_target:mod_event_target_player = {
				OR = {
					has_character_flag = mod_event_temporary_flag_letter_for_ending_4
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_2
				}
			}
		}
		ai_chance = {
			factor = 45
			modifier = {
				factor = 0.5
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = 0 } }
			}
			modifier = {
				factor = 1.3
				opinion = {	who = event_target:mod_event_target_ruler value = 30 }
			}
			modifier = {
				factor = 1.6
				opinion = {	who = event_target:mod_event_target_ruler value = 50 }
			}
			modifier = {
				factor = 1.6
				event_target:mod_event_target_ruler = { dynasty = ROOT }
			}
			modifier = {
				factor = 1.6
				trait = just
			}
		}

		character_event = {
			id = OPG.3343
			days = 7
		}
	}

	option = {
		name = EVTOPTD_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# 엔딩 3,4,7,8 공통 : 고발이 받아들여짐 (1) 명분을 얻음                #
		#----------------------------------------------------------------------#

		trigger = {
			event_target:mod_event_target_player = {
				OR = {
					has_character_flag = mod_event_temporary_flag_letter_for_ending_3
					has_character_flag = mod_event_temporary_flag_letter_for_ending_4
					has_character_flag = mod_event_temporary_flag_letter_for_ending_7
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_2
				}
			}
		}
		ai_chance = {
			factor = 30
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = 0 } }
			}
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -20 } }
			}
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -40 } }
			}
		}

		character_event = {
			id = OPG.3345
			days = 7
		}
	}

	option = {
		name = EVTOPTE_HIDDEN_EVENT

		#----------------------------------------------------------------------#
		# 엔딩 3,4,7,8 공통 : 고발이 받아들여짐 (2) 체포하여 압송해줌          #
		# (8_2 는 원 군주가 사망했기 때문에 이 선택지는 발동되지 않음)         #
		#----------------------------------------------------------------------#

		trigger = {
			event_target:mod_event_target_player = {
				OR = {
					has_character_flag = mod_event_temporary_flag_letter_for_ending_3
					has_character_flag = mod_event_temporary_flag_letter_for_ending_4
					has_character_flag = mod_event_temporary_flag_letter_for_ending_7
					has_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
				}
			}
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				event_target:mod_event_target_ruler = { dynasty = ROOT }
			}
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = 0 } }
			}
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -20 } }
			}
			modifier = {
				factor = 1.6
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -40 } }
			}
			modifier = {
				factor = 2.0
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -60 } }
			}
			modifier = {
				factor = 3.0
				NOT = { opinion = {	who = event_target:mod_event_target_ruler value = -80 } }
			}
		}

		character_event = {
			id = OPG.3347
			days = 7
		}
	}
}

character_event = {

	id = OPG.3342
	desc = EVTDESC_OPG_3342
	picture = GFX_evt_bad_news

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# A. 더 이상은 할 수 있는 일이 없다.                                       #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_OPG_3342

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	#--------------------------------------------------------------------------#
	# B. 그렇다면 직접 응징하는 수밖에 없다.                                   #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTB_OPG_3342

		#----------------------------------------------------------------------#
		# 자문회를 소집한다 - 연속 이벤트: 납치                                #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			character_event = {
				id = OPG.3361
				days = 5
			}
		}
	}
}

character_event = {

	id = OPG.3343
	desc = EVTDESC_OPG_3343
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes
	hide_from = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3343
		hidden_tooltip = {
			letter_event = {
				id = OPG.3344
			}
		}
	}
}

letter_event = {

	id = OPG.3344
	desc = {
		text = EVTDESC_OPG_3344_37
		trigger = {
			OR = {
				has_character_flag = mod_event_temporary_flag_letter_for_ending_3
				has_character_flag = mod_event_temporary_flag_letter_for_ending_7
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3344_481
		trigger = {
			OR = {
				has_character_flag = mod_event_temporary_flag_letter_for_ending_4
				has_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3344_482
		trigger = {
			has_character_flag = mod_event_temporary_flag_letter_for_ending_8_2
		}
	}

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# A. 더 이상은 할 수 있는 일이 없다.                                       #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_OPG_3344

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	#--------------------------------------------------------------------------#
	# B. 그렇다면 직접 응징하는 수밖에 없다.                                   #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTB_OPG_3344

		#----------------------------------------------------------------------#
		# 자문회를 소집한다 - 연속 이벤트: 납치                                #
		#----------------------------------------------------------------------#

		hidden_tooltip = {
			character_event = {
				id = OPG.3361
				days = 5
			}
		}
	}
}

character_event = {

	id = OPG.3345
	desc = EVTDESC_OPG_3345
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes
	hide_from = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3345
		hidden_tooltip = {
			letter_event = {
				id = OPG.3346
			}
		}
	}
}

letter_event = {

	id = OPG.3346
	desc = EVTDESC_OPG_3346

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# A. 그 자는 처벌을 받을 것이다.                                           #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_OPG_3346

		#----------------------------------------------------------------------#
		# 그 주군은 해당 군주에 대하여 투옥과 작위회수의 명분을 얻습니다.      #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			liege = {
				opinion = {
					who = PREV
					modifier = opinion_mod_char_reason_revoking_imprisoning
				}
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

character_event = {

	id = OPG.3347
	desc = EVTDESC_OPG_3347
	picture = GFX_evt_recieve_letter

	is_triggered_only = yes
	hide_from = yes

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	option = {
		name = EVTOPTA_OPG_3347
		hidden_tooltip = {
			letter_event = {
				id = OPG.3348
			}
		}
	}
}

letter_event = {

	id = OPG.3348
	desc = EVTDESC_OPG_3348

	is_triggered_only = yes

	#--------------------------------------------------------------------------#
	# A. 이제 기다리면 되겠군.                                                 #
	#--------------------------------------------------------------------------#

	option = {
		name = EVTOPTA_OPG_3348

		#----------------------------------------------------------------------#
		# 일단 주군의 감옥에 가둔다.                                           #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			liege = {
				event_target:mod_event_target_ruler = {
					imprison = PREV
				}
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 감옥으로 넘기기 전에, 감옥 이벤트에서 사용하는 이벤트 타겟을 새로 지 #
		# 정한다.                                                              #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			save_event_target_as = mod_event_target_prisoner
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌로 넘어간다                                             #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_player

		hidden_tooltip = {
			event_target:mod_event_target_prisoner = {
				character_event = {
					id = OPG.3349
					days = 7
				}
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 이벤트 : 처벌                                                                #
# 상대 군주가 감옥에 갇힌 경우, 이제 마음대로 이 자를 처벌할 수 있다.          #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3349
	hide_window = yes

	# mod_event_target_prisoner (ROOT)
	# mod_event_target_player

	is_triggered_only = yes

	immediate = {
		prisoner = no

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3350
			}
		}
	}
}

character_event = {

	id = OPG.3350
	desc = EVTDESC_OPG_3350
	picture = GFX_evt_nemo_default_dungeon_kneeling

	# mod_event_target_prisoner
	# mod_event_target_player (ROOT)

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3350

		#----------------------------------------------------------------------#
		# A. 금전배상으로 충분하다.                                            #
		#----------------------------------------------------------------------#
		
		event_target:mod_event_target_ruler = {
			transfer_scaled_wealth = {
				to = ROOT
				value = all
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3350

		#----------------------------------------------------------------------#
		# B. 그걸론 안 된다. 제대로 처벌해야 한다.                             #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_prisoner = {

			imprison = event_target:mod_event_target_player

			character_event = {
				id = OPG.3351
			}
		}
	}
}

character_event = {

	id = OPG.3351
	hide_window = yes

	# mod_event_target_prisoner (ROOT)
	# mod_event_target_player

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# opinion_imprisoned : 원본의 모디파이어. -50                          #
		#----------------------------------------------------------------------#

		any_dynasty_member = {
			opinion = {
				who = event_target:mod_event_target_player
				modifier = opinion_imprisoned
				months = 240
			}
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3352
			}
		}
	}
}


character_event = {

	id = OPG.3352
	desc = EVTDESC_OPG_3352
	picture = GFX_evt_nemo_default_dungeon_kneeling

	is_triggered_only = yes

	# mod_event_target_prisoner (ROOT)
	# mod_event_target_player

	option = {
		name = EVTOPTA_OPG_3352

		#----------------------------------------------------------------------#
		# A. 비밀 지하 감옥에 던져넣는다.                                      #
		#    (원본의 Oubliette 코드를 그대로 사용한다.                         #
		#----------------------------------------------------------------------#

		tooltip = {
			event_target:mod_event_target_prisoner = {	
				add_character_modifier = {
					name = the_oubliette
					duration = -1
				}
			}
		}
		
		hidden_tooltip = {
			event_target:mod_event_target_prisoner = {
				character_event = {
					id = 50008
				}
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌 체인 종료                                              #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_prisoner
		clear_event_target = mod_event_target_player
	}

	option = {
		name = EVTOPTB_OPG_3352

		#----------------------------------------------------------------------#
		# B. 고문한다                                                          #
		#----------------------------------------------------------------------#

		trigger = {
			event_target:mod_event_target_prisoner = {
				is_adult = yes
			}
		}

		ROOT = {
			random = {
				chance = 25
				add_trait = impaler
			}
		}
		event_target:mod_event_target_prisoner = {
			health = -1.0
			add_trait = maimed
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌 체인 종료                                              #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_prisoner
		clear_event_target = mod_event_target_player
	}

	option = {
		name = EVTOPTC_OPG_3352

		#----------------------------------------------------------------------#
		# C. 고문한다                                                          #
		#----------------------------------------------------------------------#

		trigger = {
			event_target:mod_event_target_prisoner = {
				is_adult = yes
			}
		}

		ROOT = {
			random = {
				chance = 25
				remove_trait = kind
				add_trait = cruel
			}
		}
		event_target:mod_event_target_prisoner = {
			health = -0.5
			add_trait = maimed

			if = {
				limit = {
					is_female = no
				}
				add_trait = eunuch
				opinion = {
					modifier = opinion_castrated_me
					who = ROOT
				}
			}

			add_trait = blinded
			opinion = {
				modifier = opinion_blinded_me
				who = ROOT
			}
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌 체인 종료                                              #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_prisoner
		clear_event_target = mod_event_target_player
	}

	option = {
		name = EVTOPTD_OPG_3352

		#----------------------------------------------------------------------#
		# D. 처형한다                                                          #
		#----------------------------------------------------------------------#

		trigger = {
			event_target:mod_event_target_prisoner = {
				is_adult = yes
			}
		}

		ROOT = {
			random = {
				chance = 25
				remove_trait = kind
				add_trait = cruel
			}
		}

		event_target:mod_event_target_prisoner = {
			death = {
				death_reason = death_execution
				killer = ROOT
			} 
		}

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌 체인 종료                                              #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_prisoner
		clear_event_target = mod_event_target_player
	}
}

#------------------------------------------------------------------------------#
# 연속 이벤트 : 납치                                                           #
# 고아가 사망한 경우에, 직접 그 군주를 납치하여 단죄한다                       #
# (엔딩 3, 엔딩 4, 엔딩 7, 엔딩 8, 엔딩 14)                                    #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3361
	desc = EVTDESC_OPG_3361
	picture = GFX_evt_nemo_common_discuss

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse

	hide_from = yes
	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3361

		trigger = {
			wealth = 50
			job_spymaster = {
				always = yes
			}
			job_marshal = {
				always = yes
			}
		}

		#----------------------------------------------------------------------#
		# 대장군과 첩보관이 임무 수행을 위해 현지로 떠난다                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			location = {
				ROOT = {
					job_spymaster = {
						save_event_target_as = mod_event_target_spymaster
						set_job_action = {
							action = action_organize_spies
							where = PREVPREV
						}
					}
					job_marshal = {
						save_event_target_as = mod_event_target_marshal
						set_job_action = {
							action = action_assist_arrest
							where = PREVPREV
						}
					}
				}
			}
		}

		wealth = -50

		#----------------------------------------------------------------------#
		# 다음 이벤트                                                          #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			character_event = {
				id = OPG.3362
				days = 14
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3361

		#----------------------------------------------------------------------#
		# 상대방 군주에 대해서 전쟁 명분이 발생                                #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			add_character_modifier = {
				name = mod_cm_dishonor_ruler_killed_orphan
				duration = 2555
				hidden = no
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTCa_OPG_3361

		trigger = {
			wealth = 50
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTCb_OPG_3361

		trigger = {
			NOT = { wealth = 50 }
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

character_event = {

	id = OPG.3362
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)
	# mod_event_target_marshal

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			letter_event = {
				id = OPG.3363
			}
		}
	}
}

letter_event = {

	id = OPG.3363
	desc = EVTDESC_OPG_3363

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)
	# mod_event_target_marshal

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3363
		trigger = {
			wealth = 10
		}
		ROOT = {
			wealth = -10
		}

		#----------------------------------------------------------------------#
		# 작전을 수행한다.                                                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3364
					days = 7
				}
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3363

		#----------------------------------------------------------------------#
		# 모두 임무를 취소하고 복귀한다.                                       #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		event_target:mod_event_target_marshal = {
			cancel_job_action = action_assist_arrest
		}

		clear_event_target = mod_event_target_spymaster
		clear_event_target = mod_event_target_marshal
		
		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}

character_event = {

	id = OPG.3364
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster (ROOT)
	# mod_event_target_marshal

	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				NOT = { intrigue = 10 }
			}

			random_list = {
				40 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				60 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 10
				NOT = { intrigue = 15 }
			}

			random_list = {
				65 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				35 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 15
				NOT = { intrigue = 20 }
			}

			random_list = {
				80 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				20 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		if = {
			limit = {
				intrigue = 20
			}

			random_list = {
				90 = {
					set_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
				10 = {
					set_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}
		}

		event_target:mod_event_target_marshal = {
			character_event = {
				id = OPG.3365
			}
		}
	}
}

character_event = {

	id = OPG.3365
	hide_window = yes

	# mod_event_target_ruler
	# mod_event_target_player
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster
	# mod_event_target_marshal (ROOT)

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 작전이 성공한 경우에는 호송 과정에서 도망칠 확률을 계산한다.         #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_spymaster = {
					has_character_flag = mod_event_temporary_flag_mission_is_succeed
				}
			}

			if = {
				limit = {
					NOT = { martial = 10 }
				}

				random_list = {
					67 = {
						set_character_flag = mod_event_temporary_flag_mission_is_succeed
					}
					33 = {
						set_character_flag = mod_event_temporary_flag_mission_is_failed
					}
				}
			}

			if = {
				limit = {
					martial = 10
					NOT = { martial = 15 }
				}

				random_list = {
					85 = {
						set_character_flag = mod_event_temporary_flag_mission_is_succeed
					}
					15 = {
						set_character_flag = mod_event_temporary_flag_mission_is_failed
					}
				}
			}

			if = {
				limit = {
					intrigue = 15
				}

				set_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		#----------------------------------------------------------------------#
		# 작전이 실패한 경우에는 무사히 탈출할 가능성을 계산한다.              #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_spymaster = {
					has_character_flag = mod_event_temporary_flag_mission_is_failed
				}
			}

			if = {
				limit = {
					NOT = { martial = 10 }
				}

				random_list = {
					50 = {
						set_character_flag = mod_event_temporary_flag_mission_is_succeed
					}
					50 = {
						set_character_flag = mod_event_temporary_flag_mission_is_failed
					}
				}
			}

			if = {
				limit = {
					martial = 10
					NOT = { martial = 15 }
				}

				random_list = {
					70 = {
						set_character_flag = mod_event_temporary_flag_mission_is_succeed
					}
					30 = {
						set_character_flag = mod_event_temporary_flag_mission_is_failed
					}
				}
			}

			if = {
				limit = {
					martial = 15
					NOT = { martial = 20 }
				}

				random_list = {
					90 = {
						set_character_flag = mod_event_temporary_flag_mission_is_succeed
					}
					10 = {
						set_character_flag = mod_event_temporary_flag_mission_is_failed
					}
				}
			}

			if = {
				limit = {
					martial = 20
				}

				set_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3366
			}
		}
	}
}

character_event = {

	id = OPG.3366
	desc = {
		text = EVTDESC_OPG_3366_SUCCEED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3366_FAILED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}
	}
	picture = GFX_evt_nemo_raining_street_in_midnight

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3366
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		hidden_tooltip = {
			character_event = {
				id = OPG.3367
			}		
		}
	}

	option = {
		name = EVTOPTB_OPG_3366
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}

		hidden_tooltip = {
			character_event = {
				id = OPG.3367
			}		
		}
	}
}

character_event = {

	id = OPG.3367
	desc = {
		text = EVTDESC_OPG_3367_T_SUCCEED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3367_T_FAILED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3367_E_SUCCEED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}
	}
	desc = {
		text = EVTDESC_OPG_3367_E_FAILED
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}
	}
	picture = GFX_evt_nemo_raining_street_in_midnight

	# mod_event_target_ruler
	# mod_event_target_player (ROOT)
	# mod_event_target_orphan
	# mod_event_target_orphanage_nurse
	# mod_event_target_spymaster

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3367
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		#----------------------------------------------------------------------#
		# 첩보관과 대장군의 능력치 보너스                                      #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			change_intrigue = 2
		}
		event_target:mod_event_target_marshal = {
			change_martial = 2
		}

		#----------------------------------------------------------------------#
		# 임무로부터 철수한다.                                                 #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		event_target:mod_event_target_marshal = {
			cancel_job_action = action_assist_arrest
		}

		clear_event_target = mod_event_target_spymaster
		clear_event_target = mod_event_target_marshal

		#----------------------------------------------------------------------#
		# 엔딩 코드 삭제                                                       #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_temporary_flag_letter_for_ending_3
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_4
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_7
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_1
		clr_character_flag = mod_event_temporary_flag_letter_for_ending_8_2

		#----------------------------------------------------------------------#
		# 감옥으로 넘기기 전에, 감옥 이벤트에서 사용하는 이벤트 타겟을 새로 지 #
		# 정한다.                                                              #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			save_event_target_as = mod_event_target_prisoner
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes

		#----------------------------------------------------------------------#
		# 이벤트 : 처벌로 넘어간다                                             #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_player

		hidden_tooltip = {
			event_target:mod_event_target_prisoner = {
				character_event = {
					id = OPG.3349
				}
			}
		}
	}

	option = {
		name = EVTOPTB_OPG_3367
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}

		#----------------------------------------------------------------------#
		# 첩보관만 능력치 보너스를 얻는다.                                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			change_intrigue = 2
		}

		#----------------------------------------------------------------------#
		# 임무로부터 철수한다.                                                 #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		event_target:mod_event_target_marshal = {
			cancel_job_action = action_assist_arrest
		}

		clear_event_target = mod_event_target_spymaster
		clear_event_target = mod_event_target_marshal

		#----------------------------------------------------------------------#
		# 상대방 군주에 대해서 전쟁 명분이 발생                                #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			add_character_modifier = {
				name = mod_cm_dishonor_ruler_killed_orphan
				duration = 2555
				hidden = no
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTC_OPG_3367
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
			event_target:mod_event_target_marshal = {
				has_character_flag = mod_event_temporary_flag_mission_is_succeed
			}
		}

		#----------------------------------------------------------------------#
		# 대장군만 능력치 보너스를 얻는다.                                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_marshal = {
			change_martial = 2
		}

		#----------------------------------------------------------------------#
		# 임무로부터 철수한다.                                                 #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			cancel_job_action = action_organize_spies
		}
		event_target:mod_event_target_marshal = {
			cancel_job_action = action_assist_arrest
		}

		clear_event_target = mod_event_target_spymaster
		clear_event_target = mod_event_target_marshal

		#----------------------------------------------------------------------#
		# 상대방 군주에 대해서 전쟁 명분이 발생                                #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_ruler = {
			add_character_modifier = {
				name = mod_cm_dishonor_ruler_killed_orphan
				duration = 2555
				hidden = no
			}
		}

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}

	option = {
		name = EVTOPTD_OPG_3367
		trigger = {
			event_target:mod_event_target_spymaster = {
				has_character_flag = mod_event_temporary_flag_mission_is_failed
			}
		}

		#----------------------------------------------------------------------#
		# 전원이 처형당한다.                                                   #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_spymaster = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		event_target:mod_event_target_marshal = {
			death = {
				death_reason = death_execution
				killer = event_target:mod_event_target_ruler
			}
		}

		clear_event_target = mod_event_target_spymaster
		clear_event_target = mod_event_target_marshal

		#----------------------------------------------------------------------#
		# 적에게 정체가 밝혀졌기 때문에, 전쟁 명분도 얻지 못한다.              #
		#----------------------------------------------------------------------#

		#----------------------------------------------------------------------#
		# 고아의 해외 입양 이벤트 체인 종료                                    #
		#----------------------------------------------------------------------#

		finish_adopting_orphan_abroad_event_effect = yes
	}
}










#------------------------------------------------------------------------------#
# 다른 군주에게 떠난 고아의 16세 엔딩 (3401~)                                  #
# 해당 군주의 시기에 다른 군주에게 떠난 고아의 경우, 성년이 되면서 편지를 보내 #
# 온다. 어떤 엔딩이 되었느냐에 따라서 몇 가지 종류의 버프가 주어지게 된다.     #
# (노멀 이상의 엔딩과 일부 배드 엔딩의 경우만 편지를 보내온다.)                #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3401
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 현재 성인이 된 고아의 스코프. On_Action 트리거에 의해 실행되었으므로 #
		# ROOT 이외의 스코프는 정의되지 않은 상태임을 유의.                    #
		# 모든 성인이 된 캐릭터에 대해서 이 이벤트가 실행되기 때문에, 그 중 다 #
		# 른 군주에게 떠난 고아들만 걸러내야 한다.                             #
		#----------------------------------------------------------------------#

		has_any_opinion_modifier = opinion_mod_cm_eternal_benefactor

		# 2.5.2.2 / is_common_adult_npc_trigger 를 쓰면 이상하게 문제가 생긴다.
		# is_adult = yes 를 별도로 빼야 문제가 안 생김..

		is_common_npc_trigger = yes
		#is_adult = yes

		#----------------------------------------------------------------------#
		# 이 이벤트가 실행된 적이 없어야 한다. (사실 불필요한 코드)            #
		#----------------------------------------------------------------------#

		NOT = { has_character_flag = mod_character_event_flag_orphan_grown_up }

		#----------------------------------------------------------------------#
		# 특정 엔딩이 출력되었어야 한다.                                       #
		# 불행해진 고아들은 편지를 보내지 않기 때문에...                       #
		#----------------------------------------------------------------------#

		OR = {
			has_character_flag = mod_event_check_flag_ending_category_01	# 노멀 엔딩
			has_character_flag = mod_event_check_flag_ending_category_06	# 폭력적 엔딩 (잔류)
			has_character_flag = mod_event_check_flag_ending_category_09	# 입양 엔딩
			has_character_flag = mod_event_check_flag_ending_category_10	# 종교 관용
			has_character_flag = mod_event_check_flag_ending_category_11	# 종교 (군주가 개종)
			has_character_flag = mod_event_check_flag_ending_category_12	# 종교 (고아가 개종)
			has_character_flag = mod_event_check_flag_ending_category_13	# 종교 갈등
			has_character_flag = mod_event_check_flag_ending_category_15	# 개과천선
			has_character_flag = mod_event_check_flag_ending_category_16	# 말썽꾸러기
			has_character_flag = mod_event_check_flag_ending_category_17	# 진짜 부모를 찾음
			has_character_flag = mod_event_check_flag_ending_category_24	# 첩
			#has_character_flag = mod_event_check_flag_ending_category_02	# 성적 학대 (잔류)
			#has_character_flag = mod_event_check_flag_ending_category_14	# 종교 (이단) - 개종하여 살아남은 경우
			#has_character_flag = mod_event_check_flag_ending_category_21	# 성직자에게 보내진 고아
			#has_character_flag = mod_event_check_flag_ending_category_22	# 시동 (->01)
			#has_character_flag = mod_event_check_flag_ending_category_23	# 시동 (->01)
		}
	}

	weight_multiplier = {
		days = 1
	}

	immediate = {

		#----------------------------------------------------------------------#
		# 이벤트가 실행되었음을 확인하는 플래그를 붙이고..                     #
		#----------------------------------------------------------------------#

		ROOT = {
			set_character_flag = mod_character_event_flag_orphan_grown_up
		}

		#----------------------------------------------------------------------#
		# 보내진 당시의 군주가 현재의 플레이어여야만 한다. 이미 사망한 등으로  #
		# 플레이어 캐릭터가 변경된 경우에는 이 편지를 받지 못한다.             #
		#----------------------------------------------------------------------#

		random_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = {
					 who = PREV
					 modifier = opinion_mod_cm_eternal_benefactor
				}
				is_alive = yes
			}
			character_event = {
				id = OPG.3402
			}
		}
	}
}

character_event = {

	id = OPG.3402
	hide_window = yes

	is_triggered_only = yes

	# ROOT : Player (정확히는 당시의 플레이어), FROM : Orphan

	immediate = {

		FROM = {
			save_event_target_as = mod_event_target_orphan
		}
		ROOT = {
			save_event_target_as = mod_event_target_old_player
		}

		#----------------------------------------------------------------------#
		# 혹시라도 어떤 이유로든 떠나서 정상 엔딩을 본 캐릭터가 다시 플레이어  #
		# 의 가신이나 봉신이 되어 있는 경우에는 16세 엔딩을 취소한다.          #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_orphan = {
					liege = {
						character = ROOT
					}
				}
			}
			break = yes
		}

		event_target:mod_event_target_orphan = {
			character_event = {
				id = OPG.3403
			}
		}
	}
}

character_event = {

	id = OPG.3403
	hide_window = yes

	is_triggered_only = yes

	# ROOT : Orphan, FROM : Player

	immediate = {
		event_target:mod_event_target_old_player = {
			character_event = {
				id = OPG.3404
			}
		}
	}
}

character_event = {

	id = OPG.3404
	desc = EVTDESC_OPG_3404
	picture = GFX_evt_recieve_letter

	# ROOT : Player, FROM : Orphan

	is_triggered_only = yes
	hide_from = yes

	option = {
		name = EVTOPTA_OPG_3404
		FROM = {
			hidden_tooltip = {
				character_event = {
					id = OPG.3405
				}			
			}
		}
	}
}

character_event = {

	id = OPG.3405
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 24. 첩                                                               #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_24
			}

			add_trait = fair

			if = {
				limit = {
					liege = {
						is_adult = no
					}
				}

				set_character_flag = mod_event_check_flag_ending_category_24_2
				clr_character_flag = mod_event_check_flag_ending_category_24
			}

			if = {
				limit = {
					liege = {
						is_adult = yes
						OR = {
							is_married = yes
							is_betrothed = yes
						}
					}
				}
				liege = {
					add_consort = ROOT
					add_lover = ROOT
				}
			}

			if = {
				limit = {
					liege = {
						is_adult = yes
						is_married = no
						is_betrothed = no
					}
				}
				liege = {
					add_spouse = ROOT
					add_lover = ROOT
				}

				set_character_flag = mod_event_check_flag_ending_category_24_1
				clr_character_flag = mod_event_check_flag_ending_category_24
			}

			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 17. 진짜 부모를 찾아 떠난 고아                                       #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_17
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 01. 평범하게 자란 아이                                               #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_01
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 15. 개과천선한 아이                                                  #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_15
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 16. 말썽꾸러기였던 아이                                              #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_16
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 12. 군주를 따라 개종한 아이                                          #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_12
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 13. 종교적 갈등을 겪은 아이                                          #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_13
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 11. 군주를 개종시킨 아이                                             #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_11
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 09. 가문에 입양된 아이                                               #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_09
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 06. 폭력적인 환경에서 자란 아이                                      #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_06
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}

		#----------------------------------------------------------------------#
		# 10. 종교에 관용적인 군주에게 보내진 아이                             #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_ending_category_10
			}
			event_target:mod_event_target_old_player = {
				letter_event = {
					id = OPG.3406
				}
			}
		}
	}
}

letter_event = {

	id = OPG.3406
	desc = {
		text = EVTDESC_OPG_3406_01
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_01 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_06
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_06 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_09
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_09 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_10
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_10 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_11
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_11 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_12
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_12 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_13
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_13 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_15
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_15 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_16
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_16 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_17
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_17 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_24
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_24_1
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_1 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3406_24_2
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_2 }
		}
	}

	## ROOT : Player, FROM : Orphan

	# mod_event_target_old_player
	# mod_event_target_orphan

	is_triggered_only = yes

	option = {
		name = {
			text = EVTOPTA_OPG_3406_01
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_01 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_17
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_17 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_09
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_09 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_12
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_12 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_11
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_11 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_10
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_10 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_13
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_13 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_16
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_16 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_15
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_15 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_06
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_06 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_24
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_24_1
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_1 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3406_24_2
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_2 }
			}
		}

		ROOT = {
			hidden_tooltip = {
				letter_event = {
					id = OPG.3407
				}
			}
		}
	}
}

letter_event = {

	id = OPG.3407
	desc = {
		text = EVTDESC_OPG_3407_17
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_17 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_01
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_01 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_09
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_09 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_12
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_12 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_11
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_11 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_10
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_10 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_13
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_13 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_16
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_16 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_15
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_15 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_06
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_06 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_24
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_24_1
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_1 }
		}
	}
	desc = {
		text = EVTDESC_OPG_3407_24_2
		trigger = {
			event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_2 }
		}
	}

	## ROOT : Player, FROMFROM : Orphan

	# mod_event_target_old_player
	# mod_event_target_orphan (FROMFROM)

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = {
			text = EVTOPTA_OPG_3407_17
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_17 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_01
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_01 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_09
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_09 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_12
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_12 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_11
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_11 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_10
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_10 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_13
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_13 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_16
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_16 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_15
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_15 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_06
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_06 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_24
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_24_1
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_1 }
			}
		}
		name = {
			text = EVTOPTA_OPG_3407_24_2
			trigger = {
				event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_24_2 }
			}
		}

		event_target:mod_event_target_orphan = {
			piety = 3
		}

		ROOT = {
			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_17 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_DIPLOMACY
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { diplomacy = 25 } }
								}
								change_diplomacy = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_01 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_PRESTIGE
						hidden_tooltip = {
							prestige = 10					
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_09 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_DIPLOMACY
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { diplomacy = 25 } }
								}
								change_diplomacy = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_12 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_LEARNING
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { learning = 25 } }
								}
								change_learning = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_11 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_PIETY
						hidden_tooltip = {
							piety = 10
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_10 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_PIETY
						hidden_tooltip = {
							piety = 10
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_13 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_PRESTIGE
						hidden_tooltip = {
							prestige = 10
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_16 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_MARTIAL
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { martial = 25 } }
								}
								change_martial = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_15 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_STEWARDSHIP
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { stewardship = 25 } }
								}
								change_stewardship = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { has_character_flag = mod_event_check_flag_ending_category_06 }
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_INTRIGUE
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { intrigue = 25 } }
								}
								change_intrigue = 1
							}
						}
					}
				}
			}

			if = {
				limit = {
					event_target:mod_event_target_orphan = { 
						OR = {
							has_character_flag = mod_event_check_flag_ending_category_24
							has_character_flag = mod_event_check_flag_ending_category_24_1
							has_character_flag = mod_event_check_flag_ending_category_24_2
						}
					}
				}
				ROOT = {
					custom_tooltip = {
						text = CUSTOM_TOOLTIP_BADGE_OF_INTRIGUE
						hidden_tooltip = {
							if = {
								limit = {
									ROOT = { NOT = { intrigue = 25 } }
								}
								change_intrigue = 1
							}
						}
					}
				}
			}
		}

		clear_event_target = mod_event_target_old_player
		clear_event_target = mod_event_target_orphan
	}
}



#------------------------------------------------------------------------------#
# 고아 파송 요청                                                               #
# 첫 고아 해외파송 이후에는 다양한 자들로부터 고아 파송 요청을 받게 된다.      #
# (2년에 한 번 발생하는 이벤트이다. / On_Action 트리거)                        #
#------------------------------------------------------------------------------#
# 3501 에서는 최소한의 조건만 확인한다. 3502 에서 각 이벤트별 구체적인 조건을  #
# 확인하게 된다.                                                               #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3501
	hide_window = yes

	ai = no
	is_triggered_only = yes

	trigger = {

		#----------------------------------------------------------------------#
		# 모드 셋업 여부 확인                                                  #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_SETUP_OK

		#----------------------------------------------------------------------#
		# 일반 상태의 플레이어 확인                                            #
		#----------------------------------------------------------------------#

		is_common_player_trigger = yes

		#----------------------------------------------------------------------#
		# 건물 : 최소한 고아원 레벨 3 이상의 고아원 건물이 필요                #
		#----------------------------------------------------------------------#

		OR = {
			has_orphanage_level_3_trigger = yes
			has_orphanage_level_4_trigger = yes
		}

		#----------------------------------------------------------------------#
		# 고아를 다른 군주에게 보낸 적이 있을 것                               #
		#----------------------------------------------------------------------#

		has_global_flag = MOD_NEMO_OPG_ORPHAN_ABROAD_CONFIRMED

		#----------------------------------------------------------------------#
		# 고아원 보모가 현재 수도에 있을 것                                    #
		#----------------------------------------------------------------------#

		is_orphanage_nurse_in_capital_trigger = yes

		#----------------------------------------------------------------------#
		# 현재 고아원에 해외파송 가능 고아가 최소한 3명 이상 있을 것           #
		#----------------------------------------------------------------------#

		any_courtier = {
			count = 3
			is_orphan_character_trigger = yes
			is_adult = no

			is_orphan_pending_special_event_trigger = no
			has_npc_is_pending_certain_event_flag_trigger = no

			NOT = { has_character_flag = mod_event_character_flag_cannot_adopt_abroad }
		}
	}

	weight_multiplier = {
		days = 1
	}

	immediate = {

		#----------------------------------------------------------------------#
		# On Action 트리거가 이벤트를 너무 뭉쳐나오게 하는 문제가 있어서, 어느 #
		# 정도 간격을 두고 일어나게끔 하는 장치                                #
		#----------------------------------------------------------------------#

		character_event = {
			id = OPG.3502
			days = 7
			random = 120
		}			
	}
}

character_event = {

	id = OPG.3502
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 지연 실행이 되고 있으므로, 실행당시에도 조건을 갖추고 있는가를 확인  #
		# 단, 조건성취가 무효화될 가능성이 없는 조건은 그냥 넘어간다.          #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				is_common_player_trigger = no
			}
			break = yes
		}
		if = {
			limit = {
				has_orphanage_level_3_trigger = no
				has_orphanage_level_4_trigger = no
			}
			break = yes
		}
		if = {
			limit = {
				is_orphanage_nurse_in_capital_trigger = no
			}
			break = yes
		}
		if = {
			limit = {
				NOT = {
					any_courtier = {
						count = 3
						is_orphan_character_trigger = yes
						is_adult = no

						is_orphan_pending_special_event_trigger = no
						has_npc_is_pending_certain_event_flag_trigger = no

						NOT = { has_character_flag = mod_event_character_flag_cannot_adopt_abroad }
					}
				}
			}
			break = yes
		}

		#----------------------------------------------------------------------#
		# 현재 쿨 타임 중에 있는 경우, 6개월을 지연하여 한 번 더 실행하도록 한 #
		# 다. 재실행 시에도 쿨타임에 걸린다면 이벤트의 발생을 포기한다.        #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				has_character_modifier = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
			}

			if = {
				limit = {
					has_character_flag = mod_event_check_flag_delay_orphan_request_event
				}
				clr_character_flag = mod_event_check_flag_delay_orphan_request_event
				break = yes
			}

			if = {
				limit = {
					NOT = { has_character_flag = mod_event_check_flag_delay_orphan_request_event }
				}
				set_character_flag = mod_event_check_flag_delay_orphan_request_event

				repeat_event = { id = OPG.3502 days = 180 }
				break = yes
			}
		}

		if = {
			limit = {
				has_character_flag = mod_event_check_flag_delay_orphan_request_event
			}
			clr_character_flag = mod_event_check_flag_delay_orphan_request_event
		}

		#----------------------------------------------------------------------#
		# 어떤 이벤트를 일으킬지 결정                                          #
		#----------------------------------------------------------------------#

		random_list = {
			50 = {
				#--------------------------------------------------------------#
				# 수도사로 키울 고아를 요청                                    #
				# 최고 지도자가 있고, 현재 활성화되어 있어야 함.               #
				# 6세 이상의 남자 아이를 데려가기를 원함                       #
				#--------------------------------------------------------------#

				modifier = {
					factor = 0
					is_reformed_religion = no
				}
				modifier = {
					factor = 0
					NOT = {
						religion_head = {
							always = yes
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						any_courtier = {
							is_suitable_orphan_for_monk_trigger = yes
						}
					}
				}

				random_courtier = {
					limit = {
						is_orphanage_nurse_trigger = yes
					}
					character_event = {
						id = OPG.3511
					}
				}
			}
			50 = {
				#--------------------------------------------------------------#
				# 시동 역할을 할 고아를 요청                                   #
				# 이슬람, 조로아스터 종교의 군주들이 요청                      #
				# 6세 이상의 남자 또는 여자 아이를 데려가기를 원함.            #
				#--------------------------------------------------------------#

				modifier = {
					factor = 0
					NOT = {
						any_playable_ruler = {
							OR = {
								religion_group = muslim
								religion_group = zoroastrian_group
							}
							is_suitable_ruler_for_adopting_request_clause_trigger = yes
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						any_courtier = {
							is_suitable_orphan_for_companion_trigger = yes
						}
					}
				}

				random_courtier = {
					limit = {
						is_orphanage_nurse_trigger = yes
					}
					character_event = {
						id = OPG.3521
					}
				}
			}
			50 = {
				#--------------------------------------------------------------#
				# 첩으로 할 고아를 요청                                        #
				# 파간, 조로아스터 종교의 군주들이 요청                        #
				# 14세 이상의 여자 아이를 데려가기를 원함.                     #
				#--------------------------------------------------------------#

				modifier = {
					factor = 0
					NOT = {
						any_playable_ruler = {
							OR = {
								religion_group = pagan_group
								religion_group = zoroastrian_group
							}
							is_female = no
							NOT = { age = 40 }
							NOT = { num_of_consorts = 3 }
							is_suitable_ruler_for_adopting_request_clause_trigger = yes
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						any_courtier = {
							is_suitable_orphan_for_concubine_trigger = yes
						}
					}
				}

				random_courtier = {
					limit = {
						is_orphanage_nurse_trigger = yes
					}
					character_event = {
						id = OPG.3531
					}
				}
			}
			50 = {
				#--------------------------------------------------------------#
				# 자녀가 없는 군주의 요청                                      #
				# 12세 이상의 남자아이를 요청                                  #
				#--------------------------------------------------------------#

				modifier = {
					factor = 0
					NOT = {
						any_playable_ruler = {
							is_female = no
							OR = {
								is_married = no
								AND = {
									is_married = yes
									spouse = {
										is_pregnant = no
									}
								}
							}
							NOT = { num_of_children = 1 }
							is_suitable_ruler_for_adopting_request_clause_trigger = yes
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						any_courtier = {
							is_suitable_orphan_for_adopting_trigger = yes
						}
					}
				}

				random_courtier = {
					limit = {
						is_orphanage_nurse_trigger = yes
					}
					character_event = {
						id = OPG.3541
					}
				}
			}
	#			50 = {
	#				#--------------------------------------------------------------#
	#				# 해적들의 요청                                                #
	#				# 장애 트레잇이 없는 12세 이상의 남자 아이를 데려가기를 원함.  #
	#				#--------------------------------------------------------------#
	#
	#				modifier = {
	#					factor = 0
	#					NOT = {
	#						any_courtier = {
	#							is_orphan_character_trigger = yes
	#							age = 12
	#							is_adult = no
	#
	#							NOT = { trait = maimed }
	#							NOT = { trait = infirm }
	#							NOT = { trait = incapable }
	#							NOT = { trait = clubfooted }
	#							NOT = { trait = hunchback }
	#							NOT = { trait = inbred }
	#							NOT = { trait = weak }
	#							NOT = { trait = feeble }
	#
	#							is_orphan_pending_special_event_trigger = no
	#							has_npc_is_pending_certain_event_flag_trigger = no
	#
	#							NOT = { has_character_flag = mod_event_character_flag_cannot_adopt_abroad }
	#						}
	#					}
	#				}
	#			}
	#			50 = {
	#				#--------------------------------------------------------------#
	#				# 음탕한 군주(Lustful, Hedonist 가 모두 있음)의 요청           #
	#				# 12세 이상의 여자아이를 요청                                  #
	#				#--------------------------------------------------------------#
	#
	#				modifier = {
	#					factor = 0
	#					NOT = {
	#						any_playable_ruler = {
	#							is_female = no
	#							trait = lustful
	#							trait = hedonist
	#						}
	#					}
	#				}
	#				modifier = {
	#					factor = 0
	#					NOT = {
	#						any_courtier = {
	#							is_orphan_character_trigger = yes
	#							age = 12
	#							is_adult = no
	#							is_female = yes
	#
	#							NOT = { trait = wounded }
	#							NOT = { trait = maimed }
	#							NOT = { trait = incapable }
	#							NOT = { trait = clubfooted }
	#							NOT = { trait = hunchback }
	#							NOT = { trait = inbred }
	#							NOT = { trait = harelip }
	#							NOT = { trait = lisp }
	#							NOT = { trait = stutter }
	#							NOT = { trait = ugly }
	#							NOT = { trait = dwarf }
	#
	#							is_orphan_pending_special_event_trigger = no
	#							has_npc_is_pending_certain_event_flag_trigger = no
	#
	#							NOT = { has_character_flag = mod_event_character_flag_cannot_adopt_abroad }
	#						}
	#					}
	#				}
	#			}
			1 = {
				#--------------------------------------------------------------#
				# 아무 조건에도 해당하지 않을 것에 대비한 브레이크 블록        #
				#--------------------------------------------------------------#
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 고아를 수도사로 키우기를 원하는 최고 종교 지도자의 요청                      #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3511
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = mod_event_target_player
		}
		ROOT = {
			save_event_target_as = mod_event_target_orphanage_nurse
		}
		religion_head = {
			save_event_target_as = mod_event_target_religion_head
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3512
			}
		}
	}
}

character_event = {

	id = OPG.3512
	desc = EVTDESC_OPG_3512
	picture = GFX_evt_throne_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3512
		hidden_tooltip = {
			event_target:mod_event_target_religion_head = {
				character_event = {
					id = OPG.3513
				}
			}		
		}
	}
	option = {
		name = EVTOPTB_OPG_3512

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_religion_head
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3513
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3514
			}
		}
	}
}

character_event = {

	id = OPG.3514
	desc = EVTDESC_OPG_3514
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3514
		hidden_tooltip = {
			event_target:mod_event_target_player = {

				#--------------------------------------------------------------#
				# 이벤트 종류를 체크하는 캐릭터 플래그 설정                    #
				#--------------------------------------------------------------#

				set_character_flag = mod_event_check_flag_suitable_orphan_for_monk

				character_event = {
					id = OPG.3515
				}
			}		
		}
	}
}

character_event = {

	id = OPG.3515
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 조건을 충족하는 고아 두 명을 뽑아서 우선 추천한다.                   #
		# 최소 한 명은 존재하기 때문에, 두 번째 뽑을 때만 중복/존재를 확인한다.#
		#----------------------------------------------------------------------#

		random_courtier = {
			limit = {
				is_suitable_orphan_for_monk_trigger = yes
			}
			save_event_target_as = mod_event_target_orphan_adopt_candidate_1
		}

		if = {
			limit = {
				any_courtier = {
					is_suitable_orphan_for_monk_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
			}

			set_character_flag = mod_event_check_flag_second_candidate_is_exist

			random_courtier = {
				limit = {
					is_suitable_orphan_for_monk_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
				save_event_target_as = mod_event_target_orphan_adopt_candidate_2
			}
		}

		character_event = {
			id = OPG.3516
		}
	}
}

character_event = {

	id = OPG.3516
	desc = EVTDESC_OPG_3516
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3516
		event_target:mod_event_target_orphan_adopt_candidate_1 = {
			character_event = {
				id = OPG.3517
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3516
		trigger = {
			has_character_flag = mod_event_check_flag_second_candidate_is_exist
		}
		event_target:mod_event_target_orphan_adopt_candidate_2 = {
			character_event = {
				id = OPG.3517
			}
		}
	}
	#	option = {
	#		name = EVTOPTC_OPG_3516
	#		trigger = {
	#			has_character_flag = mod_event_check_flag_second_candidate_is_exist
	#			any_courtier = {
	#				is_suitable_orphan_for_monk_trigger = yes
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_2 }
	#			}
	#		}
	#		event_target:mod_event_target_orphan_adopt_candidate_2 = {
	#			character_event = {
	#				id = OPG.3518
	#			}
	#		}
	#	}

	option = {
		name = EVTOPTD_OPG_3516

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_check_flag_second_candidate_is_exist
		clr_character_flag = mod_event_check_flag_suitable_orphan_for_monk

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_religion_head
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3517
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 종교 지도자를 상대방 군주의 이름으로 타겟팅한다.                     #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_religion_head = {
			save_event_target_as = mod_event_target_ruler
		}

		#----------------------------------------------------------------------#
		# 선택지를 위해 설정했던 타겟 설정과 임시 플래그를 삭제                #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_orphan_adopt_candidate_1
		clear_event_target = mod_event_target_orphan_adopt_candidate_2
		clear_event_target = mod_event_target_religion_head

		event_target:mod_event_target_player = {

			clr_character_flag = mod_event_check_flag_second_candidate_is_exist

			#------------------------------------------------------------------#
			# 요청에 의한 파송은 쿨 타임의 적용을 받지 않는다.                 #
			# 다만, 파송이 진행 중에는 다른 고아를 보낼 수 없기 때문에 이를 임 #
			# 시로 설정해 둔다.                                                #
			#------------------------------------------------------------------#

			add_character_modifier = {
				name = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
				duration = 183
			}

			#------------------------------------------------------------------#
			# 이벤트 종류를 체크하는 캐릭터 플래그는 이제 불필요하므로 삭제    #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_check_flag_suitable_orphan_for_monk
		}

		#----------------------------------------------------------------------#
		# 고아 세팅                                                            #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_orphan

		#----------------------------------------------------------------------#
		# 고아의 트레잇, 플래그, 모디파이어 등을 정리                          #
		#----------------------------------------------------------------------#

		remove_orphan_character_flag_effect = yes
		remove_orphan_character_flag_reminiscence_effect = yes
		remove_orphan_character_flag_intrigue_effect = yes
		remove_orphan_character_relative_opinion_modifier_effect = yes
		remove_orphan_character_trait_effect = yes

		remove_orphan_character_relative_opinion_intrigue_modifier_effect = yes

		#----------------------------------------------------------------------#
		# 이 고아의 경우 이미 엔딩이 정해져 있으므로 미리 설정해 둔다.         #
		#----------------------------------------------------------------------#

		set_character_flag = mod_event_orphan_ending_flag_21
		set_character_flag = mod_event_check_flag_orphan_for_monk

		#----------------------------------------------------------------------#
		# 일반 입양 라인으로 가져간다.                                         #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3061
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 시동을 구하는 이슬람/조로아스터 군주의 요청                                  #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3521
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = mod_event_target_player
		}
		ROOT = {
			save_event_target_as = mod_event_target_orphanage_nurse
		}

		random_playable_ruler = {
			limit = {
				is_suitable_ruler_for_adopting_request_clause_trigger = yes
				OR = {
					religion_group = muslim
					religion_group = zoroastrian_group
				}
			}
			save_event_target_as = mod_event_target_ruler
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3522
			}
		}
	}
}

character_event = {

	id = OPG.3522
	desc = EVTDESC_OPG_3522
	picture = GFX_evt_throne_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3522
		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				character_event = {
					id = OPG.3523
				}
			}		
		}
	}
	option = {
		name = EVTOPTB_OPG_3522

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3523
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3524
			}
		}
	}
}

character_event = {

	id = OPG.3524
	desc = EVTDESC_OPG_3524
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3524
		hidden_tooltip = {
			event_target:mod_event_target_player = {

				#--------------------------------------------------------------#
				# 이벤트 종류를 체크하는 캐릭터 플래그 설정                    #
				#--------------------------------------------------------------#

				set_character_flag = mod_event_check_flag_suitable_orphan_for_companion

				character_event = {
					id = OPG.3525
				}
			}		
		}
	}
}

character_event = {

	id = OPG.3525
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 조건을 충족하는 고아 두 명을 뽑아서 우선 추천한다.                   #
		# 최소 한 명은 존재하기 때문에, 두 번째 뽑을 때만 중복/존재를 확인한다.#
		#----------------------------------------------------------------------#

		random_courtier = {
			limit = {
				is_suitable_orphan_for_companion_trigger = yes
			}
			save_event_target_as = mod_event_target_orphan_adopt_candidate_1
		}

		if = {
			limit = {
				any_courtier = {
					is_suitable_orphan_for_companion_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
			}

			set_character_flag = mod_event_check_flag_second_candidate_is_exist

			random_courtier = {
				limit = {
					is_suitable_orphan_for_companion_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
				save_event_target_as = mod_event_target_orphan_adopt_candidate_2
			}
		}

		character_event = {
			id = OPG.3526
		}
	}
}

character_event = {

	id = OPG.3526
	desc = EVTDESC_OPG_3526
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3526
		event_target:mod_event_target_orphan_adopt_candidate_1 = {
			character_event = {
				id = OPG.3527
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3526
		trigger = {
			has_character_flag = mod_event_check_flag_second_candidate_is_exist
		}
		event_target:mod_event_target_orphan_adopt_candidate_2 = {
			character_event = {
				id = OPG.3527
			}
		}
	}
	#	option = {
	#		name = EVTOPTC_OPG_3526
	#		trigger = {
	#			has_character_flag = mod_event_check_flag_second_candidate_is_exist
	#			any_courtier = {
	#				is_suitable_orphan_for_monk_trigger = yes
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_2 }
	#			}
	#		}
	#		event_target:mod_event_target_orphan_adopt_candidate_2 = {
	#			character_event = {
	#				id = OPG.3528
	#			}
	#		}
	#	}

	option = {
		name = EVTOPTD_OPG_3526

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_check_flag_second_candidate_is_exist
		clr_character_flag = mod_event_check_flag_suitable_orphan_for_companion

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3527
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 선택지를 위해 설정했던 타겟 설정과 임시 플래그를 삭제                #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_orphan_adopt_candidate_1
		clear_event_target = mod_event_target_orphan_adopt_candidate_2

		event_target:mod_event_target_player = {

			clr_character_flag = mod_event_check_flag_second_candidate_is_exist

			#------------------------------------------------------------------#
			# 요청에 의한 파송은 쿨 타임의 적용을 받지 않는다.                 #
			# 다만, 파송이 진행 중에는 다른 고아를 보낼 수 없기 때문에 이를 임 #
			# 시로 설정해 둔다.                                                #
			#------------------------------------------------------------------#

			add_character_modifier = {
				name = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
				duration = 183
			}

			#------------------------------------------------------------------#
			# 이벤트 종류를 체크하는 캐릭터 플래그는 이제 불필요하므로 삭제    #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_check_flag_suitable_orphan_for_companion
		}

		#----------------------------------------------------------------------#
		# 고아 세팅                                                            #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_orphan

		#----------------------------------------------------------------------#
		# 고아의 트레잇, 플래그, 모디파이어 등을 정리                          #
		#----------------------------------------------------------------------#

		remove_orphan_character_flag_effect = yes
		remove_orphan_character_flag_reminiscence_effect = yes
		remove_orphan_character_flag_intrigue_effect = yes
		remove_orphan_character_relative_opinion_modifier_effect = yes
		remove_orphan_character_trait_effect = yes

		remove_orphan_character_relative_opinion_intrigue_modifier_effect = yes

		#----------------------------------------------------------------------#
		# 같은 성별일 경우에는 엔딩이 22 로 정해진다.                          #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_ruler = {
					same_sex = ROOT
				}
			}
			set_character_flag = mod_event_orphan_ending_flag_22
		}

		#----------------------------------------------------------------------#
		# 다른 성별일 경우에는 여기서 엔딩이 정해지지 않는다.                  #
		#----------------------------------------------------------------------#

		if = {
			limit = {
				event_target:mod_event_target_ruler = {
					NOT = { same_sex = ROOT }
				}
			}
		}
		
		set_character_flag = mod_event_check_flag_orphan_for_companion

		#----------------------------------------------------------------------#
		# 일반 입양 라인으로 가져간다.                                         #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3061
			}
		}
	}
}

#------------------------------------------------------------------------------#
# 첩을 구하는 파간/조로아스터 군주의 요청                                      #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3531
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = mod_event_target_player
		}
		ROOT = {
			save_event_target_as = mod_event_target_orphanage_nurse
		}

		random_playable_ruler = {
			limit = {
				OR = {
					religion_group = pagan_group
					religion_group = zoroastrian_group
				}
				is_female = no
				NOT = { age = 40 }
				NOT = { num_of_consorts = 3 }
				is_suitable_ruler_for_adopting_request_clause_trigger = yes
			}
			save_event_target_as = mod_event_target_ruler
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3532
			}
		}
	}
}

character_event = {

	id = OPG.3532
	desc = EVTDESC_OPG_3532
	picture = GFX_evt_throne_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3532
		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				character_event = {
					id = OPG.3533
				}
			}		
		}
	}
	option = {
		name = EVTOPTB_OPG_3532

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3533
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3534
			}
		}
	}
}

character_event = {

	id = OPG.3534
	desc = EVTDESC_OPG_3534
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3534
		hidden_tooltip = {
			event_target:mod_event_target_player = {

				#--------------------------------------------------------------#
				# 이벤트 종류를 체크하는 캐릭터 플래그 설정                    #
				#--------------------------------------------------------------#

				set_character_flag = mod_event_check_flag_suitable_orphan_for_concubine

				character_event = {
					id = OPG.3535
				}
			}		
		}
	}
}

character_event = {

	id = OPG.3535
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 조건을 충족하는 고아 두 명을 뽑아서 우선 추천한다.                   #
		# 최소 한 명은 존재하기 때문에, 두 번째 뽑을 때만 중복/존재를 확인한다.#
		#----------------------------------------------------------------------#

		random_courtier = {
			limit = {
				is_suitable_orphan_for_concubine_trigger = yes
			}
			save_event_target_as = mod_event_target_orphan_adopt_candidate_1
		}

		if = {
			limit = {
				any_courtier = {
					is_suitable_orphan_for_concubine_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
			}

			set_character_flag = mod_event_check_flag_second_candidate_is_exist

			random_courtier = {
				limit = {
					is_suitable_orphan_for_concubine_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
				save_event_target_as = mod_event_target_orphan_adopt_candidate_2
			}
		}

		character_event = {
			id = OPG.3536
		}
	}
}

character_event = {

	id = OPG.3536
	desc = EVTDESC_OPG_3536
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3536
		event_target:mod_event_target_orphan_adopt_candidate_1 = {
			character_event = {
				id = OPG.3537
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3536
		trigger = {
			has_character_flag = mod_event_check_flag_second_candidate_is_exist
		}
		event_target:mod_event_target_orphan_adopt_candidate_2 = {
			character_event = {
				id = OPG.3537
			}
		}
	}
	#	option = {
	#		name = EVTOPTC_OPG_3536
	#		trigger = {
	#			has_character_flag = mod_event_check_flag_second_candidate_is_exist
	#			any_courtier = {
	#				is_suitable_orphan_for_monk_trigger = yes
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_2 }
	#			}
	#		}
	#		event_target:mod_event_target_orphan_adopt_candidate_2 = {
	#			character_event = {
	#				id = OPG.3538
	#			}
	#		}
	#	}

	option = {
		name = EVTOPTD_OPG_3536

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_check_flag_second_candidate_is_exist
		clr_character_flag = mod_event_check_flag_suitable_orphan_for_concubine

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3537
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 선택지를 위해 설정했던 타겟 설정과 임시 플래그를 삭제                #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_orphan_adopt_candidate_1
		clear_event_target = mod_event_target_orphan_adopt_candidate_2

		event_target:mod_event_target_player = {

			clr_character_flag = mod_event_check_flag_second_candidate_is_exist

			#------------------------------------------------------------------#
			# 요청에 의한 파송은 쿨 타임의 적용을 받지 않는다.                 #
			# 다만, 파송이 진행 중에는 다른 고아를 보낼 수 없기 때문에 이를 임 #
			# 시로 설정해 둔다.                                                #
			#------------------------------------------------------------------#

			add_character_modifier = {
				name = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
				duration = 183
			}

			#------------------------------------------------------------------#
			# 이벤트 종류를 체크하는 캐릭터 플래그는 이제 불필요하므로 삭제    #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_check_flag_suitable_orphan_for_concubine
		}

		#----------------------------------------------------------------------#
		# 고아 세팅                                                            #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_orphan

		#----------------------------------------------------------------------#
		# 고아의 트레잇, 플래그, 모디파이어 등을 정리                          #
		#----------------------------------------------------------------------#

		remove_orphan_character_flag_effect = yes
		remove_orphan_character_flag_reminiscence_effect = yes
		remove_orphan_character_flag_intrigue_effect = yes
		remove_orphan_character_relative_opinion_modifier_effect = yes
		remove_orphan_character_trait_effect = yes

		remove_orphan_character_relative_opinion_intrigue_modifier_effect = yes

		#----------------------------------------------------------------------#
		# 이 고아의 경우 이미 엔딩이 정해져 있으므로 미리 설정해 둔다.         #
		#----------------------------------------------------------------------#

		set_character_flag = mod_event_orphan_ending_flag_24
		set_character_flag = mod_event_check_flag_orphan_for_concubine

		#----------------------------------------------------------------------#
		# 일반 입양 라인으로 가져간다.                                         #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3061
			}
		}
	}
}


#------------------------------------------------------------------------------#
# 자녀가 없는 군주의 요청                                                      #
#------------------------------------------------------------------------------#

character_event = {

	id = OPG.3541
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = {
			save_event_target_as = mod_event_target_player
		}
		ROOT = {
			save_event_target_as = mod_event_target_orphanage_nurse
		}

		random_playable_ruler = {
			limit = {
				is_female = no
				OR = {
					is_married = no
					AND = {
						is_married = yes
						spouse = {
							is_pregnant = no
						}
					}
				}
				NOT = { num_of_children = 1 }
				is_suitable_ruler_for_adopting_request_clause_trigger = yes
			}
			save_event_target_as = mod_event_target_ruler
		}

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3542
			}
		}
	}
}

character_event = {

	id = OPG.3542
	desc = EVTDESC_OPG_3542
	picture = GFX_evt_throne_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3542
		hidden_tooltip = {
			event_target:mod_event_target_ruler = {
				character_event = {
					id = OPG.3543
				}
			}		
		}
	}
	option = {
		name = EVTOPTB_OPG_3542

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3543
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3544
			}
		}
	}
}

character_event = {

	id = OPG.3544
	desc = EVTDESC_OPG_3544
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes

	option = {
		name = EVTOPTA_OPG_3544
		hidden_tooltip = {
			event_target:mod_event_target_player = {

				#--------------------------------------------------------------#
				# 이벤트 종류를 체크하는 캐릭터 플래그 설정                    #
				#--------------------------------------------------------------#

				set_character_flag = mod_event_check_flag_suitable_orphan_for_adopting

				character_event = {
					id = OPG.3545
				}
			}		
		}
	}
}

character_event = {

	id = OPG.3545
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 조건을 충족하는 고아 두 명을 뽑아서 우선 추천한다.                   #
		# 최소 한 명은 존재하기 때문에, 두 번째 뽑을 때만 중복/존재를 확인한다.#
		#----------------------------------------------------------------------#

		random_courtier = {
			limit = {
				is_suitable_orphan_for_adopting_trigger = yes
			}
			save_event_target_as = mod_event_target_orphan_adopt_candidate_1
		}

		if = {
			limit = {
				any_courtier = {
					is_suitable_orphan_for_adopting_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
			}

			set_character_flag = mod_event_check_flag_second_candidate_is_exist

			random_courtier = {
				limit = {
					is_suitable_orphan_for_adopting_trigger = yes
					NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
				}
				save_event_target_as = mod_event_target_orphan_adopt_candidate_2
			}
		}

		character_event = {
			id = OPG.3546
		}
	}
}

character_event = {

	id = OPG.3546
	desc = EVTDESC_OPG_3546
	picture = GFX_evt_nemo_orphanage_nurse_room

	is_triggered_only = yes
	show_from_from_from = yes

	option = {
		name = EVTOPTA_OPG_3546
		event_target:mod_event_target_orphan_adopt_candidate_1 = {
			character_event = {
				id = OPG.3547
			}
		}
	}
	option = {
		name = EVTOPTB_OPG_3546
		trigger = {
			has_character_flag = mod_event_check_flag_second_candidate_is_exist
		}
		event_target:mod_event_target_orphan_adopt_candidate_2 = {
			character_event = {
				id = OPG.3547
			}
		}
	}
	#	option = {
	#		name = EVTOPTC_OPG_3546
	#		trigger = {
	#			has_character_flag = mod_event_check_flag_second_candidate_is_exist
	#			any_courtier = {
	#				is_suitable_orphan_for_monk_trigger = yes
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_1 }
	#				NOT = { character = event_target:mod_event_target_orphan_adopt_candidate_2 }
	#			}
	#		}
	#		event_target:mod_event_target_orphan_adopt_candidate_2 = {
	#			character_event = {
	#				id = OPG.3548
	#			}
	#		}
	#	}

	option = {
		name = EVTOPTD_OPG_3546

		#----------------------------------------------------------------------#
		# 여기서 이벤트 종료                                                   #
		#----------------------------------------------------------------------#

		clr_character_flag = mod_event_check_flag_second_candidate_is_exist
		clr_character_flag = mod_event_check_flag_suitable_orphan_for_adopting

		clear_event_target = mod_event_target_player
		clear_event_target = mod_event_target_ruler
		clear_event_target = mod_event_target_orphanage_nurse
	}
}

character_event = {

	id = OPG.3547
	hide_window = yes

	is_triggered_only = yes

	immediate = {

		#----------------------------------------------------------------------#
		# 선택지를 위해 설정했던 타겟 설정과 임시 플래그를 삭제                #
		#----------------------------------------------------------------------#

		clear_event_target = mod_event_target_orphan_adopt_candidate_1
		clear_event_target = mod_event_target_orphan_adopt_candidate_2

		event_target:mod_event_target_player = {

			clr_character_flag = mod_event_check_flag_second_candidate_is_exist

			#------------------------------------------------------------------#
			# 요청에 의한 파송은 쿨 타임의 적용을 받지 않는다.                 #
			# 다만, 파송이 진행 중에는 다른 고아를 보낼 수 없기 때문에 이를 임 #
			# 시로 설정해 둔다.                                                #
			#------------------------------------------------------------------#

			add_character_modifier = {
				name = mod_event_interval_notification_flag_modifier_adopt_orphan_abroad
				duration = 183
			}

			#------------------------------------------------------------------#
			# 이벤트 종류를 체크하는 캐릭터 플래그는 이제 불필요하므로 삭제    #
			#------------------------------------------------------------------#

			clr_character_flag = mod_event_check_flag_suitable_orphan_for_adopting
		}

		#----------------------------------------------------------------------#
		# 고아 세팅                                                            #
		#----------------------------------------------------------------------#

		save_event_target_as = mod_event_target_orphan

		#----------------------------------------------------------------------#
		# 고아의 트레잇, 플래그, 모디파이어 등을 정리                          #
		#----------------------------------------------------------------------#

		remove_orphan_character_flag_effect = yes
		remove_orphan_character_flag_reminiscence_effect = yes
		remove_orphan_character_flag_intrigue_effect = yes
		remove_orphan_character_relative_opinion_modifier_effect = yes
		remove_orphan_character_trait_effect = yes

		remove_orphan_character_relative_opinion_intrigue_modifier_effect = yes

		#----------------------------------------------------------------------#
		# 이 고아의 경우 이미 엔딩이 정해져 있으므로 미리 설정해 둔다.         #
		#----------------------------------------------------------------------#

		set_character_flag = mod_event_orphan_ending_flag_09
		set_character_flag = mod_event_check_flag_orphan_for_adopting

		#----------------------------------------------------------------------#
		# 일반 입양 라인으로 가져간다.                                         #
		#----------------------------------------------------------------------#

		event_target:mod_event_target_player = {
			character_event = {
				id = OPG.3061
			}
		}
	}
}